.version sol 0.45.0

.macro constructor
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
ENDS
ACCEPT
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro setIcon
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDREF
ENDS
;; param: icon
CALLREF {
	CALL $setIcon_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setIcon_internal
.type	setIcon_internal, @function
CALL $setIcon_internal_macro$

.macro setIcon_internal_macro
;; param: icon
; function setIcon
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; ==
GETGLOB 2
EQUAL
THROWIFNOT 100
ACCEPT
; expValue
; end expValue
;; push identifier icon
; colValue
; end colValue
; end function setIcon
SETGLOB 17

.macro start
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $start_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	start_internal
.type	start_internal, @function
CALL $start_internal_macro$

.macro start_internal_macro
; function start
CALLREF {
	CALL $startFetch_internal_macro$
}
; end function start

.macro prestart
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
ENDS
;; param: index
CALLREF {
	CALL $prestart_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	prestart_internal
.type	prestart_internal, @function
CALL $prestart_internal_macro$

.macro prestart_internal_macro
;; param: index
; function prestart
CALLREF {
	CALL $startFetch_internal_macro$
}
; end function prestart
DROP

.macro startGlobal
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: partAddress
;; param: choosenDAD
CALLREF {
	CALL $startGlobal_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	startGlobal_internal
.type	startGlobal_internal, @function
CALL $startGlobal_internal_macro$

.macro startGlobal_internal_macro
;; param: partAddress
;; param: choosenDAD
; function startGlobal
; expValue
; end expValue
;; push identifier choosenDAD
DUP
; colValue
SETGLOB 18
; end colValue
; expValue
; end expValue
;; push identifier partAddress
PUSH S1
; colValue
SETGLOB 16
; end colValue
CALLREF {
	CALL $startFetch_internal_macro$
}
; end function startGlobal
DROP2

.macro startFetch
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $startFetch_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	startFetch_internal
.type	startFetch_internal, @function
CALL $startFetch_internal_macro$

.macro startFetch_internal_macro
; function startFetch
CALLREF {
	CALL $fetchDistricts_internal_macro$
}
CALLREF {
	CALL $fetchMB_internal_macro$
}
CALLREF {
	CALL $fetchVP_internal_macro$
}
CALLREF {
	CALL $editDeAudit_internal_macro$
}
; end function startFetch

.macro fetchDistricts
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $fetchDistricts_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	fetchDistricts_internal
.type	fetchDistricts_internal, @function
CALL $fetchDistricts_internal_macro$

.macro fetchDistricts_internal_macro
; function fetchDistricts
NULL
;; decl: pubkey
;; Remote call IDeAuditData.districtKeys
;; push identifier choosenDADaddress
GETGLOB 18
PUSHSLICE x926036c6580234c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
NEWC
STSLICECONST 0
;; push identifier pubkey
PUSH S2
ISNULL
THROWIFNOT 64
STSLICECONST 0
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x2b2846e8
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
DROP
; end function fetchDistricts

.macro SCfetchDistricts
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
;; param: districtKeys
CALLREF {
	CALL $SCfetchDistricts_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	SCfetchDistricts_internal
.type	SCfetchDistricts_internal, @function
CALL $SCfetchDistricts_internal_macro$

.macro SCfetchDistricts_internal_macro
;; param: districtKeys
; function SCfetchDistricts
; expValue
; end expValue
;; push identifier districtKeys
DUP
; colValue
SETGLOB 22
; end colValue
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	;; <
	;; get member length
	;; push identifier districtKeys
	PUSH2 S0, S1
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	;; push identifier districtKeys
	PUSH2 S0, S1
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	;; decl: curDistrict
	;; push identifier curDistrict
	DUP
	CALLREF {
		CALL $getDistrictData_internal_macro$
	}
	DROP
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
; end for
; end function SCfetchDistricts
DROP2

.macro getDistrictData
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: curDistr
CALLREF {
	CALL $getDistrictData_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getDistrictData_internal
.type	getDistrictData_internal, @function
CALL $getDistrictData_internal_macro$

.macro getDistrictData_internal_macro
;; param: curDistr
; function getDistrictData
NULL
;; decl: pubkey
;; Remote call IDeAuditData.getDistrict4Debot
;; push identifier choosenDADaddress
GETGLOB 18
PUSHSLICE x92620236c4a234c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
;; push identifier curDistr
PUSH S2
NEWC
STSLICECONST 0
;; push identifier pubkey
PUSH S3
ISNULL
THROWIFNOT 64
STSLICECONST 0
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x52fbba6d
STU 256
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function getDistrictData
DROP2

.macro SCchooseDistrict
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDREF
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 32
LDDICT
ROTREV
PAIR
SWAP
DUP
SDEMPTY
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 32
LDDICT
ROTREV
PAIR
SWAP
DUP
SDEMPTY
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: name4Debot
;; param: votes4Debot
;; param: votingCentersArr4Debot
;; param: votingPoolsArr4Debot
;; param: municipalBodiesArr4Debot
;; param: districtCurrentKeyD
CALLREF {
	CALL $SCchooseDistrict_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	SCchooseDistrict_internal
.type	SCchooseDistrict_internal, @function
CALL $SCchooseDistrict_internal_macro$

.macro SCchooseDistrict_internal_macro
;; param: name4Debot
;; param: votes4Debot
;; param: votingCentersArr4Debot
;; param: votingPoolsArr4Debot
;; param: municipalBodiesArr4Debot
;; param: districtCurrentKeyD
; function SCchooseDistrict
;; index
;; push identifier districtCurrentKeyD
DUP
;; push identifier districtD
GETGLOB 21
PUSHINT 256
DICTUGET
PUSHREFCONT {
	LDREF
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	ENDS
	TUPLE 3
}
PUSHREFCONT {
	PUSHREF {
	}
	PUSHINT 0
	NEWDICT
	PAIR
	PUSHINT 0
	NEWDICT
	PAIR
	TUPLE 3
}
IFELSE
;; decl: cp
; expValue
; end expValue
;; push identifier name4Debot
; colValue
PUSH S6
SETINDEX 0
; end colValue
; expValue
; end expValue
;; push identifier municipalBodiesArr4Debot
; colValue
PUSH S2
SETINDEX 1
; end colValue
; expValue
; end expValue
;; push identifier votingPoolsArr4Debot
; colValue
PUSH S3
SETINDEX 2
; end colValue
; expValue
;; fetch districtD
;; push identifier districtCurrentKeyD
PUSH S1
GETGLOB 21
; end expValue
;; push identifier cp
PUSH S2
; colValue
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	SWAP
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	SWAP
	UNPAIR
	XCHG s2
	STU 32
	STDICT
}
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 21
; end colValue
; end function SCchooseDistrict
BLKDROP 7

.macro fetchMB
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $fetchMB_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	fetchMB_internal
.type	fetchMB_internal, @function
CALL $fetchMB_internal_macro$

.macro fetchMB_internal_macro
; function fetchMB
NULL
;; decl: pubkey
;; Remote call IDeAuditData.municipalBodyKeys
;; push identifier choosenDADaddress
GETGLOB 18
PUSHSLICE x926186bfe8b234c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
NEWC
STSLICECONST 0
;; push identifier pubkey
PUSH S2
ISNULL
THROWIFNOT 64
STSLICECONST 0
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x4f419d1b
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
DROP
; end function fetchMB

.macro SCfetchMB
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
;; param: municipalBodyKeys
CALLREF {
	CALL $SCfetchMB_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	SCfetchMB_internal
.type	SCfetchMB_internal, @function
CALL $SCfetchMB_internal_macro$

.macro SCfetchMB_internal_macro
;; param: municipalBodyKeys
; function SCfetchMB
; expValue
; end expValue
;; push identifier municipalBodyKeys
DUP
; colValue
SETGLOB 24
; end colValue
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	;; <
	;; get member length
	;; push identifier municipalBodyKeys
	PUSH2 S0, S1
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	;; push identifier municipalBodyKeys
	PUSH2 S0, S1
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	;; decl: curMB
	;; push identifier curMB
	DUP
	CALLREF {
		CALL $getMBData_internal_macro$
	}
	DROP
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
; end for
; end function SCfetchMB
DROP2

.macro getMBData
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: curMB
CALLREF {
	CALL $getMBData_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getMBData_internal
.type	getMBData_internal, @function
CALL $getMBData_internal_macro$

.macro getMBData_internal_macro
;; param: curMB
; function getMBData
NULL
;; decl: pubkey
;; Remote call IDeAuditData.getMunicipalBody4Debot
;; push identifier choosenDADaddress
GETGLOB 18
PUSHSLICE x9263814440c234c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
;; push identifier curMB
PUSH S2
NEWC
STSLICECONST 0
;; push identifier pubkey
PUSH S3
ISNULL
THROWIFNOT 64
STSLICECONST 0
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x744ac44f
STU 256
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function getMBData
DROP2

.macro SCgetMBData
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDREF
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 32
LDDICT
ROTREV
PAIR
SWAP
DUP
SDEMPTY
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: name4Debot
;; param: votes4Debot
;; param: votingCentersArr4Debot
;; param: votingPoolsArr4Debot
;; param: municipalBodyCurrentKeyD
CALLREF {
	CALL $SCgetMBData_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	SCgetMBData_internal
.type	SCgetMBData_internal, @function
CALL $SCgetMBData_internal_macro$

.macro SCgetMBData_internal_macro
;; param: name4Debot
;; param: votes4Debot
;; param: votingCentersArr4Debot
;; param: votingPoolsArr4Debot
;; param: municipalBodyCurrentKeyD
; function SCgetMBData
;; index
;; push identifier municipalBodyCurrentKeyD
DUP
;; push identifier MBD
GETGLOB 23
PUSHINT 256
DICTUGET
PUSHREFCONT {
	LDREF
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	ENDS
	TUPLE 2
}
PUSHREFCONT {
	PUSHREF {
	}
	PUSHINT 0
	NEWDICT
	PAIR
	TUPLE 2
}
IFELSE
;; decl: mb
; expValue
; end expValue
;; push identifier name4Debot
; colValue
PUSH S5
SETINDEX 0
; end colValue
; expValue
; end expValue
;; push identifier votingPoolsArr4Debot
; colValue
PUSH S2
SETINDEX 1
; end colValue
; expValue
;; fetch MBD
;; push identifier municipalBodyCurrentKeyD
PUSH S1
GETGLOB 23
; end expValue
;; push identifier mb
PUSH S2
; colValue
CALLREF {
	UNTUPLE 2
	SWAP
	NEWC
	STREF
	SWAP
	UNPAIR
	XCHG s2
	STU 32
	STDICT
}
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 23
; end colValue
; end function SCgetMBData
BLKDROP 6

.macro fetchVP
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $fetchVP_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	fetchVP_internal
.type	fetchVP_internal, @function
CALL $fetchVP_internal_macro$

.macro fetchVP_internal_macro
; function fetchVP
NULL
;; decl: pubkey
;; Remote call IDeAuditData.votingPoolKeys
;; push identifier choosenDADaddress
GETGLOB 18
PUSHSLICE x92636166df7234c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
NEWC
STSLICECONST 0
;; push identifier pubkey
PUSH S2
ISNULL
THROWIFNOT 64
STSLICECONST 0
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x3518dca6
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
DROP
; end function fetchVP

.macro SCfetchVP
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
;; param: votingPoolKeys
CALLREF {
	CALL $SCfetchVP_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	SCfetchVP_internal
.type	SCfetchVP_internal, @function
CALL $SCfetchVP_internal_macro$

.macro SCfetchVP_internal_macro
;; param: votingPoolKeys
; function SCfetchVP
; expValue
; end expValue
;; push identifier votingPoolKeys
DUP
; colValue
SETGLOB 26
; end colValue
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	;; <
	;; get member length
	;; push identifier votingPoolKeys
	PUSH2 S0, S1
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	;; push identifier votingPoolKeys
	PUSH2 S0, S1
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	;; decl: curVP
	;; push identifier curVP
	DUP
	CALLREF {
		CALL $getVPData_internal_macro$
	}
	DROP
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
; end for
; end function SCfetchVP
DROP2

.macro getVPData
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: curVP
CALLREF {
	CALL $getVPData_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getVPData_internal
.type	getVPData_internal, @function
CALL $getVPData_internal_macro$

.macro getVPData_internal_macro
;; param: curVP
; function getVPData
NULL
;; decl: pubkey
;; Remote call IDeAuditData.getVotingPool4Debot
;; push identifier choosenDADaddress
GETGLOB 18
PUSHSLICE x9261a256848234c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
;; push identifier curVP
PUSH S2
NEWC
STSLICECONST 0
;; push identifier pubkey
PUSH S3
ISNULL
THROWIFNOT 64
STSLICECONST 0
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x4006cf19
STU 256
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function getVPData
DROP2

.macro SCgetVPData
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDREF
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: name4Debot
;; param: votes4Debot
;; param: votingCentersArr4Debot
;; param: votingPoolCurrentKeyD
CALLREF {
	CALL $SCgetVPData_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	SCgetVPData_internal
.type	SCgetVPData_internal, @function
CALL $SCgetVPData_internal_macro$

.macro SCgetVPData_internal_macro
;; param: name4Debot
;; param: votes4Debot
;; param: votingCentersArr4Debot
;; param: votingPoolCurrentKeyD
; function SCgetVPData
;; index
;; push identifier votingPoolCurrentKeyD
DUP
;; push identifier votingPoolD
GETGLOB 25
PUSHINT 256
DICTUGET
PUSHREFCONT {
	LDREF
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	ENDS
	TUPLE 2
}
PUSHREFCONT {
	PUSHREF {
	}
	PUSHINT 0
	NEWDICT
	PAIR
	TUPLE 2
}
IFELSE
;; decl: vp
; expValue
; end expValue
;; push identifier name4Debot
; colValue
PUSH S4
SETINDEX 0
; end colValue
; expValue
;; fetch votingPoolD
;; push identifier votingPoolCurrentKeyD
PUSH S1
GETGLOB 25
; end expValue
;; push identifier vp
PUSH S2
; colValue
CALLREF {
	UNTUPLE 2
	SWAP
	NEWC
	STREF
	SWAP
	UNPAIR
	XCHG s2
	STU 32
	STDICT
}
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 25
; end colValue
; end function SCgetVPData
BLKDROP 5

.macro editDeAudit
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $editDeAudit_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	editDeAudit_internal
.type	editDeAudit_internal, @function
CALL $editDeAudit_internal_macro$

.macro editDeAudit_internal_macro
; function editDeAudit
PUSHREF {
	.blob x6564697444656175646974446174614d656e75
}
PUSHREF {
	.blob x
}
PUSHINT 9
NEWDICT
PUSHREF {
	.blob x4445562066657463682064617461
}
PUSHREF {
	.blob x
}
PUSHINT 3
TUPLE 3
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHREF {
	.blob x4445562073686f772064617461
}
PUSHREF {
	.blob x
}
PUSHINT 1955044948
TUPLE 3
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHREF {
	.blob x616464206469737472696374
}
PUSHREF {
	.blob x
}
PUSHINT 1201659168
TUPLE 3
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHREF {
	.blob x4164642063616e646964617465
}
PUSHREF {
	.blob x
}
PUSHINT 239826546
TUPLE 3
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PUSHREF {
	.blob x616464206d756e69636970616c20626f6479
}
PUSHREF {
	.blob x
}
PUSHINT 1510020160
TUPLE 3
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
PUSHINT 4
ROT
PUSHINT 32
DICTUSETB
PUSHREF {
	.blob x61646420766f74696e6720706f6f6c
}
PUSHREF {
	.blob x
}
PUSHINT 1510020160
TUPLE 3
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
PUSHINT 5
ROT
PUSHINT 32
DICTUSETB
PUSHREF {
	.blob x61646420766f74696e672063656e746572
}
PUSHREF {
	.blob x
}
PUSHINT 1510020160
TUPLE 3
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
PUSHINT 6
ROT
PUSHINT 32
DICTUSETB
PUSHREF {
	.blob x72657475726e20746f206d61696e206d656e75
}
PUSHREF {
	.blob x
}
PUSHINT 1929308858
TUPLE 3
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
PUSHINT 7
ROT
PUSHINT 32
DICTUSETB
PUSHREF {
	.blob x51756974
}
PUSHREF {
	.blob x
}
PUSHINT 0
TUPLE 3
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
PUSHINT 8
ROT
PUSHINT 32
DICTUSETB
PAIR
CALLREF {
	CALL $Menu_no_obj_select_macro$
}
; end function editDeAudit

.macro goToATdebot
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
ENDS
;; param: index
CALLREF {
	CALL $goToATdebot_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	goToATdebot_internal
.type	goToATdebot_internal, @function
CALL $goToATdebot_internal_macro$

.macro goToATdebot_internal_macro
;; param: index
; function goToATdebot
;; Remote call IVotingAuditDebotACTMmenu.preStart
;; push identifier m_participant
GETGLOB 16
;; push identifier m_ATdebotAddress
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000003_
STSLICER
SWAP
NEWC
STSLICECONST x3668559a
STSLICE
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function goToATdebot
DROP

.macro devshow
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
ENDS
;; param: index
CALLREF {
	CALL $devshow_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	devshow_internal
.type	devshow_internal, @function
CALL $devshow_internal_macro$

.macro devshow_internal_macro
;; param: index
; function devshow
; expValue
; end expValue
;; push identifier index
; colValue
; end colValue
; for
PUSHINT 0
;; decl: k
PUSHCONT {
	;; push identifier k
	DUP
	;; <
	;; get member length
	;; push identifier districtsD
	GETGLOB 22
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier k
	DUP
	;; push identifier districtsD
	GETGLOB 22
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	;; decl: curDT
	;; index
	;; push identifier curDT
	DUP
	;; push identifier districtD
	GETGLOB 21
	PUSHINT 256
	DICTUGET
	PUSHREFCONT {
		LDREF
		LDU 32
		LDDICT
		ROTREV
		PAIR
		SWAP
		LDU 32
		LDDICT
		ROTREV
		PAIR
		SWAP
		ENDS
		TUPLE 3
	}
	PUSHREFCONT {
		PUSHREF {
		}
		PUSHINT 0
		NEWDICT
		PAIR
		PUSHINT 0
		NEWDICT
		PAIR
		TUPLE 3
	}
	IFELSE
	;; decl: dt
	PUSHINT 0
	NIL
	NEWC
	PUSHSLICE x646973747269637444202d2d2d2063757244543a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; push identifier curDT
	PUSH S4
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	PUSHSLICE x2c64742e6e616d653a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; get member name
	;; push identifier dt
	PUSH S3
	INDEX 0
	CTOS
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	CALLREF {
		CALL $Terminal_no_obj_print_macro$
	}
	DROP2
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; for
PUSHINT 0
;; decl: k
PUSHCONT {
	;; push identifier k
	DUP
	;; <
	;; get member length
	;; push identifier MBkeysD
	GETGLOB 24
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier k
	DUP
	;; push identifier MBkeysD
	GETGLOB 24
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	;; decl: curbm
	;; index
	;; push identifier curbm
	DUP
	;; push identifier MBD
	GETGLOB 23
	PUSHINT 256
	DICTUGET
	PUSHREFCONT {
		LDREF
		LDU 32
		LDDICT
		ROTREV
		PAIR
		SWAP
		ENDS
		TUPLE 2
	}
	PUSHREFCONT {
		PUSHREF {
		}
		PUSHINT 0
		NEWDICT
		PAIR
		TUPLE 2
	}
	IFELSE
	;; decl: mb
	PUSHINT 0
	NIL
	NEWC
	PUSHSLICE x4d426b65797344202d2d2d204d426b657973445b695d3a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; push identifier curbm
	PUSH S4
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	PUSHSLICE x2c6d622e6e616d653a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; get member name
	;; push identifier mb
	PUSH S3
	INDEX 0
	CTOS
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	CALLREF {
		CALL $Terminal_no_obj_print_macro$
	}
	DROP2
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
;; index
PUSHINT 0
;; push identifier MBD
GETGLOB 23
PUSHINT 256
DICTUGET
PUSHREFCONT {
	LDREF
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	ENDS
	TUPLE 2
}
PUSHREFCONT {
	PUSHREF {
	}
	PUSHINT 0
	NEWDICT
	PAIR
	TUPLE 2
}
IFELSE
;; decl: mb
;; get member votingPoolsArr
;; push identifier mb
DUP
INDEX 1
;; decl: VPAR
; for
PUSHINT 0
;; decl: k
PUSHCONT {
	;; push identifier k
	;; <
	;; get member length
	;; push identifier VPAR
	PUSH2 S0, S1
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier k
	;; push identifier VPAR
	PUSH2 S0, S1
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	;; decl: curVPAR
	PUSHINT 0
	NIL
	NEWC
	PUSHSLICE x5f2b5f2b5f2b637572565041523a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; push identifier curVPAR
	PUSH S3
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	PUSHSLICE x2b2b2b565041522e6c656e6774683a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; get member length
	;; push identifier VPAR
	PUSH S5
	INDEX 0
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	PUSHSLICE x202b2b2b
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	CALLREF {
		CALL $Terminal_no_obj_print_macro$
	}
	DROP
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; for
PUSHINT 0
;; decl: k
PUSHCONT {
	;; push identifier k
	DUP
	;; <
	;; get member length
	;; push identifier votingPoolKeysD
	GETGLOB 26
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier k
	DUP
	;; push identifier votingPoolKeysD
	GETGLOB 26
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	;; decl: curvp
	;; index
	;; push identifier curvp
	DUP
	;; push identifier votingPoolD
	GETGLOB 25
	PUSHINT 256
	DICTUGET
	PUSHREFCONT {
		LDREF
		LDU 32
		LDDICT
		ROTREV
		PAIR
		SWAP
		ENDS
		TUPLE 2
	}
	PUSHREFCONT {
		PUSHREF {
		}
		PUSHINT 0
		NEWDICT
		PAIR
		TUPLE 2
	}
	IFELSE
	;; decl: vp
	PUSHINT 0
	NIL
	NEWC
	PUSHSLICE x4d426b65797344202d2d2d2063757276703a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; push identifier curvp
	PUSH S4
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	PUSHSLICE x2c6d622e6e616d653a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; get member name
	;; push identifier vp
	PUSH S3
	INDEX 0
	CTOS
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	CALLREF {
		CALL $Terminal_no_obj_print_macro$
	}
	DROP2
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
;; index
PUSHINT 1
;; push identifier districtD
GETGLOB 21
PUSHINT 256
DICTUGET
PUSHREFCONT {
	LDREF
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	ENDS
	TUPLE 3
}
PUSHREFCONT {
	PUSHREF {
	}
	PUSHINT 0
	NEWDICT
	PAIR
	PUSHINT 0
	NEWDICT
	PAIR
	TUPLE 3
}
IFELSE
;; decl: dt
;; get member municipalBodiesArr
;; push identifier dt
DUP
INDEX 1
;; decl: MBarr
; for
PUSHINT 0
;; decl: k
PUSHCONT {
	;; push identifier k
	;; <
	;; get member length
	;; push identifier MBarr
	PUSH2 S0, S1
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier k
	;; push identifier MBarr
	PUSH2 S0, S1
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	;; decl: curmbar
	;; index
	;; push identifier curmbar
	DUP
	;; push identifier MBD
	GETGLOB 23
	PUSHINT 256
	DICTUGET
	PUSHREFCONT {
		LDREF
		LDU 32
		LDDICT
		ROTREV
		PAIR
		SWAP
		ENDS
		TUPLE 2
	}
	PUSHREFCONT {
		PUSHREF {
		}
		PUSHINT 0
		NEWDICT
		PAIR
		TUPLE 2
	}
	IFELSE
	;; decl: curStr
	PUSHINT 0
	NIL
	NEWC
	PUSHSLICE x6375726d6261723a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; push identifier curmbar
	PUSH S4
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	PUSHSLICE x2c206375725374722e6e616d653a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; get member name
	;; push identifier curStr
	PUSH S3
	INDEX 0
	CTOS
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	CALLREF {
		CALL $Terminal_no_obj_print_macro$
	}
	DROP2
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
CALLREF {
	CALL $editDeAudit_internal_macro$
}
; end function devshow
BLKDROP 5

.macro onAddDistrictSetName
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
ENDS
;; param: index
CALLREF {
	CALL $onAddDistrictSetName_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	onAddDistrictSetName_internal
.type	onAddDistrictSetName_internal, @function
CALL $onAddDistrictSetName_internal_macro$

.macro onAddDistrictSetName_internal_macro
;; param: index
; function onAddDistrictSetName
; expValue
; end expValue
;; push identifier index
; colValue
; end colValue
PUSHINT 2079741131
PUSHREF {
	.blob x0a456e746572206469737472696374204e616d653a200a
}
FALSE
CALLREF {
	CALL $Terminal_no_obj_input_macro$
}
; end function onAddDistrictSetName
DROP

.macro setDistrictCall
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDREF
ENDS
;; param: value
CALLREF {
	CALL $setDistrictCall_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setDistrictCall_internal
.type	setDistrictCall_internal, @function
CALL $setDistrictCall_internal_macro$

.macro setDistrictCall_internal_macro
;; param: value
; function setDistrictCall
;; push identifier value
DUP
;; bytes
;; decl: nameDistr
PUSHINT 0
NIL
NEWC
PUSHSLICE x0a2a2a2a2a2a20546f75636865642044654175646974446174613a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier choosenDADaddress
GETGLOB 18
CALLREF {
	CALL $convertAddressToHexString_macro$
}
PUSHSLICE x2c204469737472696374206e616d653a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier nameDistr
PUSH S3
CTOS
CALLREF {
	CALL $storeStringInBuilders_macro$
}
PUSHSLICE x2c6772616d7320666f722063616c6c3a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier GRAMS_ADD
GETGLOB 15
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
PUSHSLICE x0a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
NULL
;; decl: pubkey
;; Remote call IParticipant.addDistrict
;; push identifier m_participant
GETGLOB 16
PUSHSLICE x926123d9279a34c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
;; push identifier GRAMS_ADD
GETGLOB 15
;; push identifier nameDistr
PUSH S3
;; push identifier choosenDADaddress
GETGLOB 18
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier pubkey
PUSH2 S5, S5
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	STU 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x2e4a48be
BLKSWAP 3, 1
NEWC
STSLICE
STREF
STU 128
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function setDistrictCall
BLKDROP 3

.macro onAddCandidateName
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
ENDS
;; param: index
CALLREF {
	CALL $onAddCandidateName_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	onAddCandidateName_internal
.type	onAddCandidateName_internal, @function
CALL $onAddCandidateName_internal_macro$

.macro onAddCandidateName_internal_macro
;; param: index
; function onAddCandidateName
; expValue
; end expValue
;; push identifier index
; colValue
; end colValue
PUSHINT 1699315533
PUSHREF {
	.blob x0a456e7465722063616e646964617465204e616d653a200a
}
FALSE
CALLREF {
	CALL $Terminal_no_obj_input_macro$
}
; end function onAddCandidateName
DROP

.macro setCandidateName
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDREF
ENDS
;; param: value
CALLREF {
	CALL $setCandidateName_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setCandidateName_internal
.type	setCandidateName_internal, @function
CALL $setCandidateName_internal_macro$

.macro setCandidateName_internal_macro
;; param: value
; function setCandidateName
;; push identifier value
DUP
;; bytes
;; decl: nameCandidate
PUSHINT 0
NIL
NEWC
PUSHSLICE x0a2a2a2a2a2a20546f75636865642044654175646974446174613a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier choosenDADaddress
GETGLOB 18
CALLREF {
	CALL $convertAddressToHexString_macro$
}
PUSHSLICE x2c2043616e646964617465206e616d653a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier nameCandidate
PUSH S3
CTOS
CALLREF {
	CALL $storeStringInBuilders_macro$
}
PUSHSLICE x2c6772616d7320666f72206164643a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier GRAMS_ADD
GETGLOB 15
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
PUSHSLICE x0a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
NULL
;; decl: pubkey
;; Remote call IParticipant.addCandidate
;; push identifier m_participant
GETGLOB 16
PUSHSLICE x926123d9279a34c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
;; push identifier GRAMS_ADD
GETGLOB 15
;; push identifier nameCandidate
PUSH S3
;; push identifier choosenDADaddress
GETGLOB 18
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier pubkey
PUSH2 S5, S5
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	STU 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x3c04fea9
BLKSWAP 3, 1
NEWC
STSLICE
STREF
STU 128
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function setCandidateName
BLKDROP 3

.macro onCurItemCheck
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
ENDS
;; param: index
CALLREF {
	CALL $onCurItemCheck_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	onCurItemCheck_internal
.type	onCurItemCheck_internal, @function
CALL $onCurItemCheck_internal_macro$

.macro onCurItemCheck_internal_macro
;; param: index
; function onCurItemCheck
; expValue
; end expValue
;; push identifier index
; colValue
; end colValue
;; if
;; push identifier index
DUP
EQINT 4
PUSHCONT {
	; expValue
	; end expValue
	PUSHINT 33
	; colValue
	SETGLOB 27
	; end colValue
}
PUSHCONT {
	;; if
	;; push identifier index
	DUP
	EQINT 5
	PUSHCONT {
		; expValue
		; end expValue
		PUSHINT 17
		; colValue
		SETGLOB 27
		; end colValue
		; expValue
		; end expValue
		PUSHINT 34
		; colValue
		SETGLOB 28
		; end colValue
	}
	PUSHCONT {
		;; if
		;; push identifier index
		DUP
		EQINT 6
		PUSHCONT {
			; expValue
			; end expValue
			PUSHINT 17
			; colValue
			SETGLOB 27
			; end colValue
			; expValue
			; end expValue
			PUSHINT 18
			; colValue
			SETGLOB 28
			; end colValue
			; expValue
			; end expValue
			PUSHINT 35
			; colValue
			SETGLOB 29
			; end colValue
		}
		IF
		;; end if
	}
	IFELSE
	;; end if
}
IFELSE
;; end if
CALLREF {
	CALL $touchDistricts_internal_macro$
}
; end function onCurItemCheck
DROP

.macro touchDistricts
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $touchDistricts_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	touchDistricts_internal
.type	touchDistricts_internal, @function
CALL $touchDistricts_internal_macro$

.macro touchDistricts_internal_macro
; function touchDistricts
PUSHINT 0
NEWDICT
PAIR
;; decl: m_menu
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; <
	;; get member length
	;; push identifier districtsD
	GETGLOB 22
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier districtsD
	GETGLOB 22
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	;; decl: curDistr
	;; index
	;; push identifier curDistr
	DUP
	;; push identifier districtD
	GETGLOB 21
	PUSHINT 256
	DICTUGET
	PUSHREFCONT {
		LDREF
		LDU 32
		LDDICT
		ROTREV
		PAIR
		SWAP
		LDU 32
		LDDICT
		ROTREV
		PAIR
		SWAP
		ENDS
		TUPLE 3
	}
	PUSHREFCONT {
		PUSHREF {
		}
		PUSHINT 0
		NEWDICT
		PAIR
		PUSHINT 0
		NEWDICT
		PAIR
		TUPLE 3
	}
	IFELSE
	;; decl: cp
	NIL
	NEWC
	PUSHSLICE x2a2a2a2a2a0a4469737472696374206e616d653a
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; get member name
	;; push identifier cp
	PUSH S2
	INDEX 0
	CTOS
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	PUSHSLICE x20446973747269637420696e6465783a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; push identifier curDistr
	PUSH S3
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	PUSHSLICE x0a3d3d3d3d0a
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	;; decl: curVdata
	; expValue
	; end expValue
	;; push identifier curVdata
	PUSH2 S4, S0
	PUSHREF {
		.blob x
	}
	PUSHINT 1278822425
	TUPLE 3
	;; array.push(..)
	CALLREF {
		UNTUPLE 3
		XCHG s2
		NEWC
		STREF
		STREF
		STU 32
	}
	SWAP
	UNPAIR
	PUSH S1
	INC
	XCHG s3
	ROTREV
	PUSHINT 32
	DICTUSETB
	PAIR
	; colValue
	POP S5
	; end colValue
	BLKDROP 3
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
DUP
; end expValue
PUSHREF {
	.blob x4261636b20746f206d656e75
}
PUSHREF {
	.blob x
}
PUSHINT 3
TUPLE 3
;; array.push(..)
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
NIP
; end colValue
PUSHREF {
	.blob x43686f6f73652064697374726963743a
}
PUSHREF {
	.blob x
}
;; push identifier m_menu
PUSH S2
CALLREF {
	CALL $Menu_no_obj_select_macro$
}
DROP
; end function touchDistricts

.macro setTouchedDistrict
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
ENDS
;; param: index
CALLREF {
	CALL $setTouchedDistrict_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setTouchedDistrict_internal
.type	setTouchedDistrict_internal, @function
CALL $setTouchedDistrict_internal_macro$

.macro setTouchedDistrict_internal_macro
;; param: index
; function setTouchedDistrict
; expValue
; end expValue
;; push identifier index
; colValue
; end colValue
; expValue
; end expValue
;; index
;; push identifier index
DUP
;; push identifier districtsD
GETGLOB 22
INDEX 1
PUSHINT 32
DICTUGET
THROWIFNOT 50
PLDU 256
; colValue
SETGLOB 30
; end colValue
;; push identifier toundDistrictsID
GETGLOB 27
NIL
NEWC
PUSHREFSLICE {
	.blob x2d2d2d2d596f7520746f756368656420446973747269637420696e6465783a20
}
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier curDistrIndexD
GETGLOB 30
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
PUSHSLICE x0a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
; end function setTouchedDistrict
DROP

.macro touchMB
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $touchMB_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	touchMB_internal
.type	touchMB_internal, @function
CALL $touchMB_internal_macro$

.macro touchMB_internal_macro
; function touchMB
PUSHINT 0
NEWDICT
PAIR
;; decl: m_menu
;; index
;; push identifier curDistrIndexD
GETGLOB 30
;; push identifier districtD
GETGLOB 21
PUSHINT 256
DICTUGET
PUSHREFCONT {
	LDREF
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	ENDS
	TUPLE 3
}
PUSHREFCONT {
	PUSHREF {
	}
	PUSHINT 0
	NEWDICT
	PAIR
	PUSHINT 0
	NEWDICT
	PAIR
	TUPLE 3
}
IFELSE
;; decl: dt
; expValue
; end expValue
;; get member municipalBodiesArr
;; push identifier dt
DUP
INDEX 1
; colValue
PUSHINT 32
SETGLOBVAR
; end colValue
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; <
	;; get member length
	;; push identifier MBarr
	PUSHINT 32
	GETGLOBVAR
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier MBarr
	PUSHINT 32
	GETGLOBVAR
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	;; decl: curBlyatMBindex
	;; index
	;; push identifier curBlyatMBindex
	DUP
	;; push identifier MBD
	GETGLOB 23
	PUSHINT 256
	DICTUGET
	PUSHREFCONT {
		LDREF
		LDU 32
		LDDICT
		ROTREV
		PAIR
		SWAP
		ENDS
		TUPLE 2
	}
	PUSHREFCONT {
		PUSHREF {
		}
		PUSHINT 0
		NEWDICT
		PAIR
		TUPLE 2
	}
	IFELSE
	;; decl: curStrOfMB
	;; index
	;; push identifier curBlyatMBindex
	PUSH S1
	;; push identifier MBforstruct
	GETGLOB 31
	PUSHINT 256
	DICTUGET
	PUSHREFCONT {
		LDREF
		LDU 256
		ENDS
		TUPLE 2
	}
	PUSHREFCONT {
		PUSHREF {
		}
		PUSHINT 0
		TUPLE 2
	}
	IFELSE
	;; decl: mp
	; expValue
	; end expValue
	;; get member name
	;; push identifier curStrOfMB
	; colValue
	PUSH S1
	INDEX 0
	SETINDEX 0
	; end colValue
	; expValue
	; end expValue
	;; push identifier curBlyatMBindex
	; colValue
	PUSH S2
	SETINDEX 1
	; end colValue
	; expValue
	;; fetch MBforstruct
	;; push identifier curBlyatMBindex
	PUSH S2
	GETGLOB 31
	; end expValue
	;; push identifier mp
	PUSH S2
	; colValue
	CALLREF {
		UNTUPLE 2
		SWAP
		NEWC
		STREF
		STU 256
	}
	ROTREV
	PUSHINT 256
	DICTUSETB
	SETGLOB 31
	; end colValue
	PUSHINT 0
	NIL
	NEWC
	PUSHSLICE x3d3d3d3d206d702e6e616d653a
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; get member name
	;; push identifier mp
	PUSH S3
	INDEX 0
	CTOS
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	PUSHSLICE x2c206d702e4d42696e6465783a
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; get member MBindex
	;; push identifier mp
	PUSH S3
	INDEX 1
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	PUSHSLICE x2c20637572426c7961744d42696e6465783a
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; push identifier curBlyatMBindex
	PUSH S5
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	CALLREF {
		CALL $Terminal_no_obj_print_macro$
	}
	BLKDROP 3
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; for
PUSHINT 0
;; decl: k
PUSHCONT {
	;; push identifier k
	DUP
	;; <
	;; get member length
	;; push identifier MBarr
	PUSHINT 32
	GETGLOBVAR
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier k
	DUP
	;; push identifier MBarr
	PUSHINT 32
	GETGLOBVAR
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	;; decl: curmbar
	;; index
	;; push identifier curmbar
	DUP
	;; push identifier MBforstruct
	GETGLOB 31
	PUSHINT 256
	DICTUGET
	PUSHREFCONT {
		LDREF
		LDU 256
		ENDS
		TUPLE 2
	}
	PUSHREFCONT {
		PUSHREF {
		}
		PUSHINT 0
		TUPLE 2
	}
	IFELSE
	;; decl: curStr
	NIL
	NEWC
	PUSHSLICE x2a2a2a2a2a204d756e69636970616c20626f6479206e616d653a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; get member name
	;; push identifier curStr
	PUSH S2
	INDEX 0
	CTOS
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	PUSHSLICE x2c204d4220696e6465783a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; get member MBindex
	;; push identifier curStr
	PUSH S2
	INDEX 1
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	PUSHSLICE x0a706f736974696f6e20696e206d656e753a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; push identifier curmbar
	PUSH S3
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	PUSHSLICE x0a
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	;; decl: curVdata
	; expValue
	; end expValue
	;; push identifier curVdata
	PUSH2 S5, S0
	PUSHREF {
		.blob x
	}
	PUSHINT 1620080949
	TUPLE 3
	;; array.push(..)
	CALLREF {
		UNTUPLE 3
		XCHG s2
		NEWC
		STREF
		STREF
		STU 32
	}
	SWAP
	UNPAIR
	PUSH S1
	INC
	XCHG s3
	ROTREV
	PUSHINT 32
	DICTUSETB
	PAIR
	; colValue
	POP S6
	; end colValue
	BLKDROP 3
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
PUSH S1
; end expValue
PUSHREF {
	.blob x4261636b20746f206d656e75
}
PUSHREF {
	.blob x
}
PUSHINT 3
TUPLE 3
;; array.push(..)
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S2
; end colValue
PUSHREF {
	.blob x43686f6f7365204d756e69636970616c20626f6479423a
}
PUSHREF {
	.blob x
}
;; push identifier m_menu
PUSH S3
CALLREF {
	CALL $Menu_no_obj_select_macro$
}
DROP2
; end function touchMB

.macro setTouchedMB
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
ENDS
;; param: index
CALLREF {
	CALL $setTouchedMB_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setTouchedMB_internal
.type	setTouchedMB_internal, @function
CALL $setTouchedMB_internal_macro$

.macro setTouchedMB_internal_macro
;; param: index
; function setTouchedMB
PUSHINT 0
NIL
NEWC
PUSHSLICE x2a2a20696e6465783a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier index
PUSH S3
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
;; index
;; push identifier index
DUP
;; push identifier MBarr
PUSHINT 32
GETGLOBVAR
INDEX 1
PUSHINT 32
DICTUGET
THROWIFNOT 50
PLDU 256
;; decl: curmbar
;; index
;; push identifier curmbar
DUP
;; push identifier MBforstruct
GETGLOB 31
PUSHINT 256
DICTUGET
PUSHREFCONT {
	LDREF
	LDU 256
	ENDS
	TUPLE 2
}
PUSHREFCONT {
	PUSHREF {
	}
	PUSHINT 0
	TUPLE 2
}
IFELSE
;; decl: mbtouchedIndex
; expValue
; end expValue
;; get member MBindex
;; push identifier mbtouchedIndex
DUP
INDEX 1
; colValue
PUSHINT 33
SETGLOBVAR
; end colValue
;; push identifier toundMBID
GETGLOB 28
NIL
NEWC
PUSHREFSLICE {
	.blob x0a202d2d2d2d596f7520746f7563686564204d756e69636970616c20626f647920696e6465783a20
}
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier curMBIndexD
PUSHINT 33
GETGLOBVAR
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
PUSHSLICE x0a697473206e616d653a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; get member name
;; push identifier mbtouchedIndex
PUSH S3
INDEX 0
CTOS
CALLREF {
	CALL $storeStringInBuilders_macro$
}
PUSHSLICE x0a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
; end function setTouchedMB
BLKDROP 3

.macro touchVP
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $touchVP_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	touchVP_internal
.type	touchVP_internal, @function
CALL $touchVP_internal_macro$

.macro touchVP_internal_macro
; function touchVP
PUSHINT 0
NEWDICT
PAIR
;; decl: m_menu
;; index
;; push identifier curMBIndexD
PUSHINT 33
GETGLOBVAR
;; push identifier MBD
GETGLOB 23
PUSHINT 256
DICTUGET
PUSHREFCONT {
	LDREF
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	ENDS
	TUPLE 2
}
PUSHREFCONT {
	PUSHREF {
	}
	PUSHINT 0
	NEWDICT
	PAIR
	TUPLE 2
}
IFELSE
;; decl: dt
PUSHINT 0
NIL
NEWC
PUSHSLICE x6474206e616d6565653a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; get member name
;; push identifier dt
PUSH S3
INDEX 0
CTOS
CALLREF {
	CALL $storeStringInBuilders_macro$
}
PUSHSLICE x0a2a2a2a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
; expValue
; end expValue
;; get member votingPoolsArr
;; push identifier dt
DUP
INDEX 1
; colValue
PUSHINT 35
SETGLOBVAR
; end colValue
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; <
	;; get member length
	;; push identifier VParray
	PUSHINT 35
	GETGLOBVAR
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier VParray
	PUSHINT 35
	GETGLOBVAR
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	;; decl: curVPindex
	;; index
	;; push identifier curVPindex
	DUP
	;; push identifier votingPoolD
	GETGLOB 25
	PUSHINT 256
	DICTUGET
	PUSHREFCONT {
		LDREF
		LDU 32
		LDDICT
		ROTREV
		PAIR
		SWAP
		ENDS
		TUPLE 2
	}
	PUSHREFCONT {
		PUSHREF {
		}
		PUSHINT 0
		NEWDICT
		PAIR
		TUPLE 2
	}
	IFELSE
	;; decl: curStrOfMB
	;; index
	;; push identifier curVPindex
	PUSH S1
	;; push identifier votpoolsMAP
	PUSHINT 34
	GETGLOBVAR
	PUSHINT 256
	DICTUGET
	PUSHREFCONT {
		LDREF
		LDU 256
		ENDS
		TUPLE 2
	}
	PUSHREFCONT {
		PUSHREF {
		}
		PUSHINT 0
		TUPLE 2
	}
	IFELSE
	;; decl: vpC
	; expValue
	; end expValue
	;; get member name
	;; push identifier curStrOfMB
	; colValue
	PUSH S1
	INDEX 0
	SETINDEX 0
	; end colValue
	; expValue
	; end expValue
	;; push identifier curVPindex
	; colValue
	PUSH S2
	SETINDEX 1
	; end colValue
	; expValue
	;; fetch votpoolsMAP
	PUSHINT 34
	GETGLOBVAR
	;; push identifier curVPindex
	PUSH S3
	SWAP
	; end expValue
	;; push identifier vpC
	PUSH S2
	; colValue
	CALLREF {
		UNTUPLE 2
		SWAP
		NEWC
		STREF
		STU 256
	}
	ROTREV
	PUSHINT 256
	DICTUSETB
	PUSHINT 34
	SETGLOBVAR
	; end colValue
	PUSHINT 0
	NIL
	NEWC
	PUSHSLICE x3d3d3d3d207670432e6e616d653a
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; get member name
	;; push identifier vpC
	PUSH S3
	INDEX 0
	CTOS
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	PUSHSLICE x2c207670432e5650696e6465783a
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; get member VPindex
	;; push identifier vpC
	PUSH S3
	INDEX 1
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	CALLREF {
		CALL $Terminal_no_obj_print_macro$
	}
	BLKDROP 3
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; <
	;; get member length
	;; push identifier VParray
	PUSHINT 35
	GETGLOBVAR
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier VParray
	PUSHINT 35
	GETGLOBVAR
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	;; decl: curVP
	;; index
	;; push identifier curVP
	DUP
	;; push identifier votingPoolD
	GETGLOB 25
	PUSHINT 256
	DICTUGET
	PUSHREFCONT {
		LDREF
		LDU 32
		LDDICT
		ROTREV
		PAIR
		SWAP
		ENDS
		TUPLE 2
	}
	PUSHREFCONT {
		PUSHREF {
		}
		PUSHINT 0
		NEWDICT
		PAIR
		TUPLE 2
	}
	IFELSE
	;; decl: vp
	NIL
	NEWC
	PUSHSLICE x0a2a2a2a2a2a20566f74696e6720706f6f6c206e616d653a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; get member name
	;; push identifier vp
	PUSH S2
	INDEX 0
	CTOS
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	PUSHSLICE x2c20565020696e6465783a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; push identifier curVP
	PUSH S3
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	PUSHSLICE x0a
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	;; decl: curVdata
	; expValue
	; end expValue
	;; push identifier curVdata
	PUSH2 S5, S0
	PUSHREF {
		.blob x
	}
	PUSHINT 1525861414
	TUPLE 3
	;; array.push(..)
	CALLREF {
		UNTUPLE 3
		XCHG s2
		NEWC
		STREF
		STREF
		STU 32
	}
	SWAP
	UNPAIR
	PUSH S1
	INC
	XCHG s3
	ROTREV
	PUSHINT 32
	DICTUSETB
	PAIR
	; colValue
	POP S6
	; end colValue
	BLKDROP 3
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
PUSH S1
; end expValue
PUSHREF {
	.blob x4261636b20746f206d656e75
}
PUSHREF {
	.blob x
}
PUSHINT 3
TUPLE 3
;; array.push(..)
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
POP S2
; end colValue
PUSHREF {
	.blob x43686f6f736520566f74696e6720706f6f6c3a
}
PUSHREF {
	.blob x
}
;; push identifier m_menu
PUSH S3
CALLREF {
	CALL $Menu_no_obj_select_macro$
}
DROP2
; end function touchVP

.macro setTouchedVP
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
ENDS
;; param: index
CALLREF {
	CALL $setTouchedVP_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setTouchedVP_internal
.type	setTouchedVP_internal, @function
CALL $setTouchedVP_internal_macro$

.macro setTouchedVP_internal_macro
;; param: index
; function setTouchedVP
;; index
;; push identifier index
DUP
;; push identifier VParray
PUSHINT 35
GETGLOBVAR
INDEX 1
PUSHINT 32
DICTUGET
THROWIFNOT 50
PLDU 256
;; decl: curVPi
;; index
;; push identifier curVPi
DUP
;; push identifier votpoolsMAP
PUSHINT 34
GETGLOBVAR
PUSHINT 256
DICTUGET
PUSHREFCONT {
	LDREF
	LDU 256
	ENDS
	TUPLE 2
}
PUSHREFCONT {
	PUSHREF {
	}
	PUSHINT 0
	TUPLE 2
}
IFELSE
;; decl: vptouchedIndex
; expValue
; end expValue
;; get member VPindex
;; push identifier vptouchedIndex
DUP
INDEX 1
; colValue
PUSHINT 36
SETGLOBVAR
; end colValue
;; push identifier toundVPID
GETGLOB 29
NIL
NEWC
PUSHREFSLICE {
	.blob x0a202d2d2d2d596f7520746f756368656420566f74696e6720706f6f6c20696e6465783a20
}
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier curVPIndexD
PUSHINT 36
GETGLOBVAR
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
PUSHSLICE x0a697473206e616d653a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; get member name
;; push identifier vptouchedIndex
PUSH S3
INDEX 0
CTOS
CALLREF {
	CALL $storeStringInBuilders_macro$
}
PUSHSLICE x0a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
; end function setTouchedVP
BLKDROP 3

.macro onAddMB
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $onAddMB_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	onAddMB_internal
.type	onAddMB_internal, @function
CALL $onAddMB_internal_macro$

.macro onAddMB_internal_macro
; function onAddMB
PUSHINT 923352339
PUSHREF {
	.blob x456e746572204d756e69636970616c20626f6479206e616d653a20
}
FALSE
CALLREF {
	CALL $Terminal_no_obj_input_macro$
}
; end function onAddMB

.macro setMBname
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDREF
ENDS
;; param: value
CALLREF {
	CALL $setMBname_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setMBname_internal
.type	setMBname_internal, @function
CALL $setMBname_internal_macro$

.macro setMBname_internal_macro
;; param: value
; function setMBname
;; push identifier value
DUP
;; bytes
;; decl: MBname
NULL
;; decl: pubkey
;; Remote call IParticipant.addMunicipalBody
;; push identifier m_participant
GETGLOB 16
PUSHSLICE x92600000000234c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
;; push identifier GRAMS_ADD
GETGLOB 15
;; push identifier curDistrIndexD
GETGLOB 30
;; push identifier MBname
PUSH S4
;; push identifier choosenDADaddress
GETGLOB 18
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier pubkey
PUSH2 S6, S6
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	STU 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x2950de3f
BLKSWAP 4, 1
NEWC
STSLICE
STREF
STU 256
STU 128
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
CALLREF {
	CALL $editDeAudit_internal_macro$
}
; end function setMBname
BLKDROP 3

.macro touchCurVotingVP
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $touchCurVotingVP_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	touchCurVotingVP_internal
.type	touchCurVotingVP_internal, @function
CALL $touchCurVotingVP_internal_macro$

.macro touchCurVotingVP_internal_macro
; function touchCurVotingVP
PUSHINT 0
NIL
NEWC
PUSHSLICE x63686f6f73656e444144616464726573733a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier choosenDADaddress
GETGLOB 18
CALLREF {
	CALL $convertAddressToHexString_macro$
}
PUSHSLICE x2c6375724469737472496e646578443a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier curDistrIndexD
GETGLOB 30
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
PUSHSLICE x2c6375724d42496e646578443a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier curMBIndexD
PUSHINT 33
GETGLOBVAR
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
PUSHSLICE x2c4752414d535f4144443a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier GRAMS_ADD
GETGLOB 15
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
PUSHINT 597176646
PUSHREF {
	.blob x456e74657220566f74696e6720706f6f6c206e616d653a20
}
FALSE
CALLREF {
	CALL $Terminal_no_obj_input_macro$
}
; end function touchCurVotingVP

.macro setVPname
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDREF
ENDS
;; param: value
CALLREF {
	CALL $setVPname_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setVPname_internal
.type	setVPname_internal, @function
CALL $setVPname_internal_macro$

.macro setVPname_internal_macro
;; param: value
; function setVPname
;; push identifier value
DUP
;; bytes
;; decl: VPname
NULL
;; decl: pubkey
;; Remote call IParticipant.addVotingPool
;; push identifier m_participant
GETGLOB 16
PUSHSLICE x92600000000234c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
;; push identifier GRAMS_ADD
GETGLOB 15
;; push identifier curMBIndexD
PUSHINT 33
GETGLOBVAR
;; push identifier curDistrIndexD
GETGLOB 30
;; push identifier VPname
PUSH S5
;; push identifier choosenDADaddress
GETGLOB 18
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier pubkey
PUSH2 S7, S7
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	STU 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x33d66f1a
BLKSWAP 5, 1
NEWC
STSLICE
STREF
STU 256
ROTREV
NEWC
STU 256
STU 128
STBREFR
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
CALLREF {
	CALL $editDeAudit_internal_macro$
}
; end function setVPname
BLKDROP 3

.macro touchCurVotingVC
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $touchCurVotingVC_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	touchCurVotingVC_internal
.type	touchCurVotingVC_internal, @function
CALL $touchCurVotingVC_internal_macro$

.macro touchCurVotingVC_internal_macro
; function touchCurVotingVC
PUSHINT 1960582215
PUSHREF {
	.blob x456e74657220566f74696e672043656e746572206e616d65
}
FALSE
CALLREF {
	CALL $Terminal_no_obj_input_macro$
}
; end function touchCurVotingVC

.macro setLocationVC
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDREF
ENDS
;; param: value
CALLREF {
	CALL $setLocationVC_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setLocationVC_internal
.type	setLocationVC_internal, @function
CALL $setLocationVC_internal_macro$

.macro setLocationVC_internal_macro
;; param: value
; function setLocationVC
;; push identifier value
DUP
;; bytes
; expValue
; end expValue
; colValue
PUSHINT 37
SETGLOBVAR
; end colValue
PUSHINT 0
NIL
NEWC
PUSHSLICE x56436e616d653a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier VCname
PUSHINT 37
GETGLOBVAR
CTOS
CALLREF {
	CALL $storeStringInBuilders_macro$
}
PUSHSLICE x2c2063686f6f73656e444144616464726573733a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier choosenDADaddress
GETGLOB 18
CALLREF {
	CALL $convertAddressToHexString_macro$
}
PUSHSLICE x2c6375724469737472496e646578443a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier curDistrIndexD
GETGLOB 30
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
PUSHSLICE x2c6375724d42496e646578443a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier curMBIndexD
PUSHINT 33
GETGLOBVAR
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
PUSHSLICE x2c6375725650496e646578443a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier curVPIndexD
PUSHINT 36
GETGLOBVAR
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
PUSHSLICE x2c204752414d535f4144443a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier GRAMS_ADD
GETGLOB 15
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
PUSHINT 1388940621
PUSHREF {
	.blob x456e74657220566f74696e672043656e746572206c6f636174696f6e
}
FALSE
CALLREF {
	CALL $Terminal_no_obj_input_macro$
}
; end function setLocationVC
DROP

.macro setVCname
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDREF
ENDS
;; param: value
CALLREF {
	CALL $setVCname_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setVCname_internal
.type	setVCname_internal, @function
CALL $setVCname_internal_macro$

.macro setVCname_internal_macro
;; param: value
; function setVCname
;; push identifier value
DUP
;; bytes
;; decl: VClocation
NULL
;; decl: pubkey
;; Remote call IParticipant.addVotingCenter
;; push identifier m_participant
GETGLOB 16
PUSHSLICE x92600000000234c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
;; push identifier GRAMS_ADD
GETGLOB 15
;; push identifier curVPIndexD
PUSHINT 36
GETGLOBVAR
;; push identifier curMBIndexD
PUSHINT 33
GETGLOBVAR
;; push identifier curDistrIndexD
GETGLOB 30
;; push identifier VClocation
PUSH S6
;; push identifier VCname
PUSHINT 37
GETGLOBVAR
;; push identifier choosenDADaddress
GETGLOB 18
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier pubkey
PUSH2 S9, S9
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	STU 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x586242d8
BLKSWAP 7, 1
NEWC
STSLICE
STREF
STREF
STU 256
BLKSWAP 3, 1
NEWC
STU 256
STU 256
STU 128
STBREFR
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
CALLREF {
	CALL $editDeAudit_internal_macro$
}
; end function setVCname
BLKDROP 3

.macro someError
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
LDU 32
ENDS
;; param: sdkError
;; param: exitCode
CALLREF {
	CALL $someError_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	someError_internal
.type	someError_internal, @function
CALL $someError_internal_macro$

.macro someError_internal_macro
;; param: sdkError
;; param: exitCode
; function someError
PUSHINT 0
NIL
NEWC
PUSHSLICE x73646b4572726f723a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier sdkError
PUSH S4
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
PUSHSLICE x0a65786974434f64653a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier exitCode
PUSH S3
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
PUSHINT 612050163
PUSHREF {
	.blob x4261636b20746f206d656e752e2e2e
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
; end function someError
DROP2

.macro getDebotInfo
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $getDebotInfo_internal_macro$
}
;; emitting 10 value(s)
PUSH S10
PUSHCONT {
	PUSH S12
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	REVERSE 10, 1
	BLKSWAP 10, 1
	NEWC
	STSLICECONST x00000deb
	STREF
	STREF
	STREF
	BLKSWAP 7, 1
	NEWC
	STREF
	STREF
	STSLICE
	STREF
	BLKSWAP 3, 1
	NEWC
	STREF
	STREF
	STREF
	STBREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	BLKDROP 10
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getDebotInfo_internal
.type	getDebotInfo_internal, @function
CALL $getDebotInfo_internal_macro$

.macro getDebotInfo_internal_macro
;; ret param: name
PUSHREF {
}
;; ret param: version
PUSHREF {
}
;; ret param: publisher
PUSHREF {
}
;; ret param: caption
PUSHREF {
}
;; ret param: author
PUSHREF {
}
;; ret param: support
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: hello
PUSHREF {
}
;; ret param: language
PUSHREF {
}
;; ret param: dabi
PUSHREF {
}
;; ret param: icon
PUSHREF {
}
; function getDebotInfo
; expValue
; end expValue
PUSHREF {
	.blob x52616469616e636520566f74696e67204175646974204465426f74204143544d
}
; colValue
POP S10
; end colValue
; expValue
; end expValue
PUSHREF {
	.blob x302e312e30
}
; colValue
POP S9
; end colValue
; expValue
; end expValue
PUSHREF {
	.blob x52616469616e6365205465616d
}
; colValue
POP S8
; end colValue
; expValue
; end expValue
PUSHREF {
	.blob x4465426f7420666f7220446541756469742062792052616469616e6365205465616d
}
; colValue
POP S7
; end colValue
; expValue
; end expValue
PUSHREF {
	.blob x52616469616e6365205465616d
}
; colValue
POP S6
; end colValue
;; address.makeAddrStd()
PUSHSLICE x801082511da76abb39b5f500d00fe05415c182d354bdbfd114f134c904852ead529_
; expValue
; end expValue
; colValue
POP S5
; end colValue
; expValue
; end expValue
PUSHREF {
	.blob x546861742773206465626f7420666f7220566f74696e672041756469742e20446576656c6f7065642062792052616469616e6365205465616d
}
; colValue
POP S4
; end colValue
; expValue
; end expValue
PUSHREF {
	.blob x656e
}
; colValue
POP S3
; end colValue
;; push identifier m_debotAbi
GETGLOB 11
DUP
ISNULL
THROWIF 63
; expValue
; end expValue
; colValue
POP S2
; end colValue
; expValue
; end expValue
;; push identifier m_icon
; colValue
DROP
GETGLOB 17
; end colValue
; end function getDebotInfo

.macro getRequiredInterfaces
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $getRequiredInterfaces_internal_macro$
}
;; emitting 1 value(s)
PUSH S1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x00000000000000000000000036190b42a_
	STSLICER
	SWAP
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getRequiredInterfaces_internal
.type	getRequiredInterfaces_internal, @function
CALL $getRequiredInterfaces_internal_macro$

.macro getRequiredInterfaces_internal_macro
;; ret param: interfaces
PUSHINT 0
NEWDICT
PAIR
; function getRequiredInterfaces
;; return
PUSHINT 1
NEWDICT
PUSHINT 61327837143279038880828163389518064523935669597243029312953519799871119370467
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PAIR
NIP
; end function getRequiredInterfaces

.macro getDebotOptions
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $getDebotOptions_internal_macro$
}
;; emitting 4 value(s)
PUSH S4
PUSHCONT {
	PUSH S6
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	REVERSE 4, 1
	BLKSWAP 4, 1
	NEWC
	STSLICECONST xfdecd0db
	STU 8
	STREF
	STREF
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	BLKDROP 4
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getDebotOptions_internal
.type	getDebotOptions_internal, @function
CALL $getDebotOptions_internal_macro$

.macro getDebotOptions_internal_macro
;; ret param: options
PUSHINT 0
;; ret param: debotAbi
PUSHREF {
}
;; ret param: targetAbi
PUSHREF {
}
;; ret param: targetAddr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; function getDebotOptions
;; push identifier m_debotAbi
GETGLOB 11
ISNULL
NOT
PUSHCONT {
	;; push identifier m_debotAbi
	GETGLOB 11
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	PUSHREF {
		.blob x
	}
}
IFELSE
; expValue
; end expValue
; colValue
POP S3
; end colValue
;; push identifier m_targetAbi
GETGLOB 12
ISNULL
NOT
PUSHCONT {
	;; push identifier m_targetAbi
	GETGLOB 12
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	PUSHREF {
		.blob x
	}
}
IFELSE
; expValue
; end expValue
; colValue
POP S2
; end colValue
;; push identifier m_target
GETGLOB 13
ISNULL
NOT
PUSHCONT {
	;; push identifier m_target
	GETGLOB 13
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
}
IFELSE
; expValue
; end expValue
; colValue
NIP
; end colValue
; expValue
; end expValue
;; push identifier m_options
GETGLOB 10
; colValue
POP S4
; end colValue
; end function getDebotOptions

.macro setABI
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDREF
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: dabi
;; param: ATdebotAddress
CALLREF {
	CALL $setABI_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setABI_internal
.type	setABI_internal, @function
CALL $setABI_internal_macro$

.macro setABI_internal_macro
;; param: dabi
;; param: ATdebotAddress
; function setABI
; expValue
; end expValue
;; push identifier ATdebotAddress
DUP
; colValue
SETGLOB 14
; end colValue
GETGLOB 2
;; ==
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
EQUAL
THROWIFNOT 100
ACCEPT
; expValue
;; fetch m_options
; end expValue
; colValue
; end colValue
; expValue
; end expValue
;; push identifier dabi
; colValue
; end colValue
; end function setABI
DROP
GETGLOB 10
PUSHINT 1
OR
SETGLOB 10
SETGLOB 11

.macro c7_to_c4
PUSHINT 37
GETGLOBVAR
PUSHINT 36
GETGLOBVAR
PUSHINT 35
GETGLOBVAR
PUSHINT 34
GETGLOBVAR
PUSHINT 33
GETGLOBVAR
PUSHINT 32
GETGLOBVAR
GETGLOB 31
GETGLOB 30
GETGLOB 29
GETGLOB 28
GETGLOB 27
GETGLOB 26
GETGLOB 25
GETGLOB 24
GETGLOB 23
GETGLOB 22
GETGLOB 21
GETGLOB 20
GETGLOB 19
GETGLOB 18
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 6
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STU 1
STU 8
SWAP
DUP
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	NEWC
	STREF
	SWAP
	STSLICECONST 1
	STBREF
}
IFELSE
SWAP
DUP
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	NEWC
	STREF
	SWAP
	STSLICECONST 1
	STBREF
}
IFELSE
SWAP
DUP
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	NEWC
	STSLICE
	SWAP
	STSLICECONST 1
	STBREF
}
IFELSE
STSLICE
PUSHINT 23
PUSHINT 1
BLKSWX
NEWC
STU 128
STSLICE
STREF
PUSHINT 20
PUSHINT 1
BLKSWX
NEWC
STSLICE
STU 256
PUSHINT 18
PUSHINT 1
BLKSWX
NEWC
STU 256
STDICT
SWAP
UNPAIR
XCHG s2
STU 32
STDICT
STDICT
BLKSWAP 14, 1
NEWC
SWAP
UNPAIR
XCHG s2
STU 32
STDICT
STDICT
SWAP
UNPAIR
XCHG s2
STU 32
STDICT
STU 32
STU 32
STU 32
STU 256
BLKSWAP 7, 1
NEWC
STDICT
SWAP
UNPAIR
XCHG s2
STU 32
STDICT
STU 256
STDICT
BLKSWAP 3, 1
NEWC
SWAP
UNPAIR
XCHG s2
STU 32
STDICT
STU 256
STREF
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDU 8
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	PLDREF
}
IFNOT
SWAP
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	PLDREF
}
IFNOT
SWAP
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	LDMSGADDR
	DROP
}
IFNOT
SWAP
LDMSGADDR
;; load next cell
LDREF
ENDS
CTOS
LDU 128
LDMSGADDR
LDREF
;; load next cell
LDREF
ENDS
CTOS
LDMSGADDR
LDU 256
;; load next cell
LDREF
ENDS
CTOS
LDU 256
LDDICT
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDDICT
;; load next cell
LDREF
ENDS
CTOS
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDDICT
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 32
LDU 32
LDU 32
LDU 256
;; load next cell
LDREF
ENDS
CTOS
LDDICT
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 256
LDDICT
;; load next cell
LDREF
ENDS
CTOS
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 256
LDREF
ENDS
PUSHINT 37
SETGLOBVAR
PUSHINT 36
SETGLOBVAR
PUSHINT 35
SETGLOBVAR
PUSHINT 34
SETGLOBVAR
PUSHINT 33
SETGLOBVAR
PUSHINT 32
SETGLOBVAR
SETGLOB 31
SETGLOB 30
SETGLOB 29
SETGLOB 28
SETGLOB 27
SETGLOB 26
SETGLOB 25
SETGLOB 24
SETGLOB 23
SETGLOB 22
SETGLOB 21
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 8
; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDU 8
	LDOPTREF
	SWAP
	DUP
	ISNULL
	PUSHCONT {
		CTOS
		PLDREF
	}
	IFNOT
	SWAP
	LDOPTREF
	SWAP
	DUP
	ISNULL
	PUSHCONT {
		CTOS
		PLDREF
	}
	IFNOT
	SWAP
	LDOPTREF
	SWAP
	DUP
	ISNULL
	PUSHCONT {
		CTOS
		LDMSGADDR
		DROP
	}
	IFNOT
	SWAP
	LDMSGADDR
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
	LDMSGADDR
	LDREF
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
	LDU 256
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
	LDDICT
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDDICT
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDDICT
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 32
	LDU 32
	LDU 32
	LDU 256
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDDICT
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 256
	LDDICT
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 256
	LDREF
	ENDS
	PUSHINT 37
	SETGLOBVAR
	PUSHINT 36
	SETGLOBVAR
	PUSHINT 35
	SETGLOBVAR
	PUSHINT 34
	SETGLOBVAR
	PUSHINT 33
	SETGLOBVAR
	PUSHINT 32
	SETGLOBVAR
	SETGLOB 31
	SETGLOB 30
	SETGLOB 29
	SETGLOB 28
	SETGLOB 27
	SETGLOB 26
	SETGLOB 25
	SETGLOB 24
	SETGLOB 23
	SETGLOB 22
	SETGLOB 21
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 8
	; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init m_options
	PUSHINT 0
	SETGLOB 10
	; init m_debotAbi
	NULL
	SETGLOB 11
	; init m_targetAbi
	NULL
	SETGLOB 12
	; init m_target
	NULL
	SETGLOB 13
	; init m_ATdebotAddress
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 14
	; init GRAMS_ADD
	PUSHINT 0
	SETGLOB 15
	; init m_participant
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 16
	; init m_icon
	PUSHREF {
	}
	SETGLOB 17
	; init choosenDADaddress
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 18
	; init m_masterPubKey
	PUSHINT 0
	SETGLOB 19
	; init m_masterSecKey
	PUSHINT 0
	SETGLOB 20
	; init districtD
	NEWDICT
	SETGLOB 21
	; init districtsD
	PUSHINT 0
	NEWDICT
	PAIR
	SETGLOB 22
	; init MBD
	NEWDICT
	SETGLOB 23
	; init MBkeysD
	PUSHINT 0
	NEWDICT
	PAIR
	SETGLOB 24
	; init votingPoolD
	NEWDICT
	SETGLOB 25
	; init votingPoolKeysD
	PUSHINT 0
	NEWDICT
	PAIR
	SETGLOB 26
	; init toundDistrictsID
	PUSHINT 0
	SETGLOB 27
	; init toundMBID
	PUSHINT 0
	SETGLOB 28
	; init toundVPID
	PUSHINT 0
	SETGLOB 29
	; init curDistrIndexD
	PUSHINT 0
	SETGLOB 30
	; init MBforstruct
	NEWDICT
	SETGLOB 31
	; init MBarr
	PUSHINT 0
	NEWDICT
	PAIR
	PUSHINT 32
	SETGLOBVAR
	; init curMBIndexD
	PUSHINT 0
	PUSHINT 33
	SETGLOBVAR
	; init votpoolsMAP
	NEWDICT
	PUSHINT 34
	SETGLOBVAR
	; init VParray
	PUSHINT 0
	NEWDICT
	PAIR
	PUSHINT 35
	SETGLOBVAR
	; init curVPIndexD
	PUSHINT 0
	PUSHINT 36
	SETGLOBVAR
	; init VCname
	PUSHREF {
	}
	PUSHINT 37
	SETGLOBVAR
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
TRUE
SETGLOB 8
	;; init state var: GRAMS_ADD
	PUSHINT 700000000
	SETGLOB 15
	;; init state var: m_participant
	;; address.makeAddrStd()
	PUSHSLICE x80127d4fcd60635f9a12005dc064b92166ec16867a703827440c35e723ddf607f57_
	SETGLOB 16
	;; init state var: choosenDADaddress
	;; address.makeAddrStd()
	PUSHSLICE x801474ef10733b5e8cb70706b857780db55e8795b6b99dc033625ac8412b419a673_
	SETGLOB 18
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
;; param: transaction_type
PUSH S2
CTOS
PLDU 4
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60 ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.internal-alias :main_external, -1
.internal :main_external
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice havePubkey
	PUSHCONT {
		LDU 256       ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG s3
		SWAP
	}
	PUSHCONT {
		XCHG s2
		GETGLOB 2
	}
	IFELSE
	DUP
	SETGLOB 5
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1      ; havePubkey msgSlice
	SWAP       ; msgSlice havePubkey
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.macro districtD
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 21
PUSH S1
PUSHCONT {
	PUSHSLICE xc000000000000000000000000083bc85a4
	NEWC
	STSLICE
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
TRUE
SETGLOB 7

.macro MBD
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 23
PUSH S1
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000f0363fe5
	NEWC
	STSLICE
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
TRUE
SETGLOB 7

.macro votingPoolD
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 25
PUSH S1
PUSHCONT {
	PUSHSLICE xc00000000000000000000000009be3f4fb
	NEWC
	STSLICE
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
TRUE
SETGLOB 7

.macro votingPoolKeysD
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 26
PUSH S1
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000a8215cf0
	NEWC
	STSLICE
	SWAP
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
TRUE
SETGLOB 7

.globl	Menu_with_obj_select
.type	Menu_with_obj_select, @function
CALL $Menu_with_obj_select_macro$

.macro Menu_with_obj_select_macro
;; param: title
;; param: description
;; param: items
; function select
;; address.makeAddrStd()
PUSHSLICE x9c358349a7d9d4465c92f07be94475030479b94640bb8b19a4189b64b384ac0b691_
;; decl: addr
;; Remote call IMenu.select
;; push identifier items
;; push identifier description
;; push identifier title
PUSH3 S1, S2, S3
;; push identifier addr
PUSH S3
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000000d3028c73_
STSLICER
STREF
STREF
SWAP
UNPAIR
XCHG s2
STU 32
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
; end function select
BLKDROP 3

.globl	Menu_no_obj_select
.type	Menu_no_obj_select, @function
CALL $Menu_no_obj_select_macro$

.macro Menu_no_obj_select_macro
;; param: title
;; param: description
;; param: items
; function select
;; address.makeAddrStd()
PUSHSLICE x9c358349a7d9d4465c92f07be94475030479b94640bb8b19a4189b64b384ac0b691_
;; decl: addr
;; Remote call IMenu.select
;; push identifier items
;; push identifier description
;; push identifier title
PUSH3 S1, S2, S3
;; push identifier addr
PUSH S3
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000000d3028c73_
STSLICER
STREF
STREF
SWAP
UNPAIR
XCHG s2
STU 32
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
; end function select
BLKDROP 4

.globl	Terminal_with_obj_input
.type	Terminal_with_obj_input, @function
CALL $Terminal_with_obj_input_macro$

.macro Terminal_with_obj_input_macro
;; param: answerId
;; param: prompt
;; param: multiline
; function input
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.input
;; push identifier multiline
;; push identifier prompt
;; push identifier answerId
PUSH3 S1, S2, S3
;; push identifier addr
PUSH S3
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x398968000000000000000000000000000072abee5f_
STSLICER
STU 32
STREF
STI 1
ENDC
PUSHINT 0
SENDRAWMSG
; end function input
BLKDROP 3

.globl	Terminal_no_obj_input
.type	Terminal_no_obj_input, @function
CALL $Terminal_no_obj_input_macro$

.macro Terminal_no_obj_input_macro
;; param: answerId
;; param: prompt
;; param: multiline
; function input
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.input
;; push identifier multiline
;; push identifier prompt
;; push identifier answerId
PUSH3 S1, S2, S3
;; push identifier addr
PUSH S3
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x398968000000000000000000000000000072abee5f_
STSLICER
STU 32
STREF
STI 1
ENDC
PUSHINT 0
SENDRAWMSG
; end function input
BLKDROP 4

.globl	Terminal_with_obj_print
.type	Terminal_with_obj_print, @function
CALL $Terminal_with_obj_print_macro$

.macro Terminal_with_obj_print_macro
;; param: answerId
;; param: message
; function print
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.print
;; push identifier message
;; push identifier answerId
;; push identifier addr
PUSH3 S1, S2, S0
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x398968000000000000000000000000000019cc9385_
STSLICER
STU 32
STREF
ENDC
PUSHINT 0
SENDRAWMSG
; end function print
DROP2

.globl	Terminal_no_obj_print
.type	Terminal_no_obj_print, @function
CALL $Terminal_no_obj_print_macro$

.macro Terminal_no_obj_print_macro
;; param: answerId
;; param: message
; function print
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.print
;; push identifier message
;; push identifier answerId
;; push identifier addr
PUSH3 S1, S2, S0
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x398968000000000000000000000000000019cc9385_
STSLICER
STU 32
STREF
ENDC
PUSHINT 0
SENDRAWMSG
; end function print
BLKDROP 3

.macro public_function_selector
DUP
PUSHINT 467924219
LEQ
IFJMPREF {
	DUP
	PUSHINT 18
	LEQ
	IFJMPREF {
		DUP
		EQINT 1
		IFJMPREF {
			CALL $start$
		}
		DUP
		EQINT 3
		IFJMPREF {
			CALL $prestart$
		}
		DUP
		EQINT 17
		IFJMPREF {
			CALL $touchMB$
		}
		DUP
		EQINT 18
		IFJMPREF {
			CALL $touchVP$
		}
	}
	DUP
	PUSHINT 3563
	LEQ
	IFJMPREF {
		DUP
		EQINT 33
		IFJMPREF {
			CALL $onAddMB$
		}
		DUP
		EQINT 34
		IFJMPREF {
			CALL $touchCurVotingVP$
		}
		DUP
		EQINT 35
		IFJMPREF {
			CALL $touchCurVotingVC$
		}
		DUP
		PUSHINT 3563
		EQUAL
		IFJMPREF {
			CALL $getDebotInfo$
		}
	}
	DUP
	PUSHINT 133706552
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 62686628
		EQUAL
		IFJMPREF {
			CALL $districtD$
		}
		DUP
		PUSHINT 68711798
		EQUAL
		IFJMPREF {
			CALL $getDistrictData$
		}
		DUP
		PUSHINT 114871040
		EQUAL
		IFJMPREF {
			CALL $SCfetchDistricts$
		}
		DUP
		PUSHINT 133706552
		EQUAL
		IFJMPREF {
			CALL $startFetch$
		}
	}
	DUP
	PUSHINT 467924219
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 175867838
		EQUAL
		IFJMPREF {
			CALL $touchDistricts$
		}
		DUP
		PUSHINT 239826546
		EQUAL
		IFJMPREF {
			CALL $onAddCandidateName$
		}
		DUP
		PUSHINT 258836457
		EQUAL
		IFJMPREF {
			CALL $setIcon$
		}
		DUP
		PUSHINT 467924219
		EQUAL
		IFJMPREF {
			CALL $votingPoolD$
		}
	}
}
DUP
PUSHINT 1482960138
LEQ
IFJMPREF {
	DUP
	PUSHINT 760093089
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 597176646
		EQUAL
		IFJMPREF {
			CALL $setVPname$
		}
		DUP
		PUSHINT 612050163
		EQUAL
		IFJMPREF {
			CALL $editDeAudit$
		}
		DUP
		PUSHINT 673275120
		EQUAL
		IFJMPREF {
			CALL $votingPoolKeysD$
		}
		DUP
		PUSHINT 760093089
		EQUAL
		IFJMPREF {
			CALL $fetchVP$
		}
	}
	DUP
	PUSHINT 923851209
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 819461398
		EQUAL
		IFJMPREF {
			CALL $SCfetchMB$
		}
		DUP
		PUSHINT 877318288
		EQUAL
		IFJMPREF {
			CALL $SCgetVPData$
		}
		DUP
		PUSHINT 923352339
		EQUAL
		IFJMPREF {
			CALL $setMBname$
		}
		DUP
		PUSHINT 923851209
		EQUAL
		IFJMPREF {
			CALL $startGlobal$
		}
	}
	DUP
	PUSHINT 1201659168
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1052559760
		EQUAL
		IFJMPREF {
			CALL $getVPData$
		}
		DUP
		PUSHINT 1078384788
		EQUAL
		IFJMPREF {
			CALL $SCchooseDistrict$
		}
		DUP
		PUSHINT 1184379414
		EQUAL
		IFJMPREF {
			CALL $someError$
		}
		DUP
		PUSHINT 1201659168
		EQUAL
		IFJMPREF {
			CALL $onAddDistrictSetName$
		}
	}
	DUP
	PUSHINT 1482960138
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1278822425
		EQUAL
		IFJMPREF {
			CALL $setTouchedDistrict$
		}
		DUP
		PUSHINT 1388940621
		EQUAL
		IFJMPREF {
			CALL $setVCname$
		}
		DUP
		PUSHINT 1450866814
		EQUAL
		IFJMPREF {
			CALL $getMBData$
		}
		DUP
		PUSHINT 1482960138
		EQUAL
		IFJMPREF {
			CALL $getRequiredInterfaces$
		}
	}
}
DUP
PUSHINT 2112671963
LEQ
IFJMPREF {
	DUP
	PUSHINT 1635246093
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1510020160
		EQUAL
		IFJMPREF {
			CALL $onCurItemCheck$
		}
		DUP
		PUSHINT 1525861414
		EQUAL
		IFJMPREF {
			CALL $setTouchedVP$
		}
		DUP
		PUSHINT 1620080949
		EQUAL
		IFJMPREF {
			CALL $setTouchedMB$
		}
		DUP
		PUSHINT 1635246093
		EQUAL
		IFJMPREF {
			CALL $setABI$
		}
	}
	DUP
	PUSHINT 1814879214
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1699315533
		EQUAL
		IFJMPREF {
			CALL $setCandidateName$
		}
		DUP
		PUSHINT 1711445358
		EQUAL
		IFJMPREF {
			CALL $fetchDistricts$
		}
		DUP
		PUSHINT 1756716863
		EQUAL
		IFJMPREF {
			CALL $constructor$
		}
		DUP
		PUSHINT 1814879214
		EQUAL
		IFJMPREF {
			CALL $SCfetchVP$
		}
	}
	DUP
	PUSHINT 1955044948
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1881704472
		EQUAL
		IFJMPREF {
			CALL $SCgetMBData$
		}
		DUP
		PUSHINT 1882603493
		EQUAL
		IFJMPREF {
			CALL $MBD$
		}
		DUP
		PUSHINT 1929308858
		EQUAL
		IFJMPREF {
			CALL $goToATdebot$
		}
		DUP
		PUSHINT 1955044948
		EQUAL
		IFJMPREF {
			CALL $devshow$
		}
	}
	DUP
	PUSHINT 2112671963
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1960582215
		EQUAL
		IFJMPREF {
			CALL $setLocationVC$
		}
		DUP
		PUSHINT 1984114363
		EQUAL
		IFJMPREF {
			CALL $fetchMB$
		}
		DUP
		PUSHINT 2079741131
		EQUAL
		IFJMPREF {
			CALL $setDistrictCall$
		}
		DUP
		PUSHINT 2112671963
		EQUAL
		IFJMPREF {
			CALL $getDebotOptions$
		}
	}
}
