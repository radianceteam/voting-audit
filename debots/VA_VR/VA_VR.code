.version sol 0.45.0

.macro constructor
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
ENDS
ACCEPT
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro setIcon
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDREF
ENDS
;; param: icon
CALLREF {
	CALL $setIcon_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setIcon_internal
.type	setIcon_internal, @function
CALL $setIcon_internal_macro$

.macro setIcon_internal_macro
;; param: icon
; function setIcon
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; ==
GETGLOB 2
EQUAL
THROWIFNOT 100
ACCEPT
; expValue
; end expValue
;; push identifier icon
; colValue
; end colValue
; end function setIcon
SETGLOB 20

.macro preSstart
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: curPart
CALLREF {
	CALL $preSstart_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	preSstart_internal
.type	preSstart_internal, @function
CALL $preSstart_internal_macro$

.macro preSstart_internal_macro
;; param: curPart
; function preSstart
; expValue
; end expValue
;; push identifier curPart
DUP
; colValue
SETGLOB 19
; end colValue
CALLREF {
	CALL $start_internal_macro$
}
; end function preSstart
DROP

.macro start
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $start_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	start_internal
.type	start_internal, @function
CALL $start_internal_macro$

.macro start_internal_macro
; function start
CALLREF {
	CALL $fetchDA_internal_macro$
}
CALLREF {
	CALL $fetchActivities_internal_macro$
}
CALLREF {
	CALL $mainMenu_internal_macro$
}
; end function start

.macro fetchDA
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $fetchDA_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	fetchDA_internal
.type	fetchDA_internal, @function
CALL $fetchDA_internal_macro$

.macro fetchDA_internal_macro
; function fetchDA
NULL
;; decl: pubkey
;; Remote call IDeAuditRoot.keysDeAudit
;; push identifier DeAuditRoot
GETGLOB 18
PUSHSLICE x9262e39c589a34c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
NEWC
STSLICECONST 0
;; push identifier pubkey
PUSH S2
ISNULL
THROWIFNOT 64
STSLICECONST 0
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x6f711c36
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
DROP
; end function fetchDA

.macro SCgetDeauditAddresses
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
;; param: keysDeAudit
CALLREF {
	CALL $SCgetDeauditAddresses_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	SCgetDeauditAddresses_internal
.type	SCgetDeauditAddresses_internal, @function
CALL $SCgetDeauditAddresses_internal_macro$

.macro SCgetDeauditAddresses_internal_macro
;; param: keysDeAudit
; function SCgetDeauditAddresses
; expValue
; end expValue
;; push identifier keysDeAudit
DUP
; colValue
SETGLOB 22
; end colValue
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	;; <
	;; get member length
	;; push identifier keysDeAudit
	PUSH2 S0, S1
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	;; push identifier keysDeAudit
	PUSH2 S0, S1
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	CALLREF {
		CALL $deauditsCaller_internal_macro$
	}
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
; end for
; end function SCgetDeauditAddresses
DROP2

.macro deauditsCaller
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: curDeAudit
CALLREF {
	CALL $deauditsCaller_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	deauditsCaller_internal
.type	deauditsCaller_internal, @function
CALL $deauditsCaller_internal_macro$

.macro deauditsCaller_internal_macro
;; param: curDeAudit
; function deauditsCaller
NULL
;; decl: pubkey
;; Remote call IDeAudit.getDetails4Debot
;; push identifier curDeAudit
PUSH S1
PUSHSLICE x9260f9d5ebea34c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
NEWC
STSLICECONST 0
;; push identifier pubkey
PUSH S2
ISNULL
THROWIFNOT 64
STSLICECONST 0
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x332e09a5
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function deauditsCaller
DROP2

.macro SCgetDAstruct
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
LDREF
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: sequentialNumber4Debot
;; param: name4Debot
;; param: rootDeAudit4Debot
;; param: dataDeAudit4Debot
;; param: tokenDeAudit4Debot
;; param: timeStart4Debot
;; param: colPeriod4Debot
;; param: valPeriod4Debot
;; param: colStake4Debot
;; param: valStake4Debot
CALLREF {
	CALL $SCgetDAstruct_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	SCgetDAstruct_internal
.type	SCgetDAstruct_internal, @function
CALL $SCgetDAstruct_internal_macro$

.macro SCgetDAstruct_internal_macro
;; param: sequentialNumber4Debot
;; param: name4Debot
;; param: rootDeAudit4Debot
;; param: dataDeAudit4Debot
;; param: tokenDeAudit4Debot
;; param: timeStart4Debot
;; param: colPeriod4Debot
;; param: valPeriod4Debot
;; param: colStake4Debot
;; param: valStake4Debot
; function SCgetDAstruct
;; index
;; get member sender
GETGLOB 9
;; push identifier DeAudits
GETGLOB 21
PUSHINT 267
DICTGETREF
PUSHCONT {
	CTOS
	CALLREF {
		LDU 32
		LDREF
		LDMSGADDR
		LDMSGADDRQ
		PUSHCONT {
			;; load next cell
			LDREF
			ENDS
			CTOS
			LDMSGADDR
		}
		IFNOT
		LDMSGADDRQ
		PUSHCONT {
			;; load next cell
			LDREF
			ENDS
			CTOS
			LDMSGADDR
		}
		IFNOT
		LDUQ 256
		PUSHCONT {
			;; load next cell
			LDREF
			ENDS
			CTOS
			LDU 256
		}
		IFNOT
		LDUQ 256
		PUSHCONT {
			;; load next cell
			LDREF
			ENDS
			CTOS
			LDU 256
		}
		IFNOT
		LDUQ 256
		PUSHCONT {
			;; load next cell
			LDREF
			ENDS
			CTOS
			LDU 256
		}
		IFNOT
		LDUQ 128
		PUSHCONT {
			;; load next cell
			LDREF
			ENDS
			CTOS
			LDU 128
		}
		IFNOT
		LDUQ 128
		PUSHCONT {
			;; load next cell
			LDREF
			ENDS
			CTOS
			LDU 128
		}
		IFNOT
		LDUQ 128
		PUSHCONT {
			;; load next cell
			LDREF
			ENDS
			CTOS
			LDU 128
		}
		IFNOT
		LDREF
		ENDS
		TUPLE 12
	}
}
PUSHCONT {
	PUSHINT 0
	PUSHREF {
	}
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	BLKPUSH 5, 0
	PUSHREF {
	}
	TUPLE 12
}
IFELSE
;; decl: cp
; expValue
; end expValue
;; push identifier sequentialNumber4Debot
; colValue
PUSH S10
SETINDEX 0
; end colValue
; expValue
; end expValue
;; push identifier name4Debot
; colValue
PUSH S9
SETINDEX 1
; end colValue
; expValue
; end expValue
;; push identifier rootDeAudit4Debot
; colValue
PUSH S8
SETINDEX 2
; end colValue
; expValue
; end expValue
;; push identifier dataDeAudit4Debot
; colValue
PUSH S7
SETINDEX 3
; end colValue
; expValue
; end expValue
;; push identifier tokenDeAudit4Debot
; colValue
PUSH S6
SETINDEX 4
; end colValue
; expValue
; end expValue
;; push identifier timeStart4Debot
; colValue
PUSH S5
SETINDEX 5
; end colValue
; expValue
; end expValue
;; push identifier colPeriod4Debot
; colValue
PUSH S4
SETINDEX 6
; end colValue
; expValue
; end expValue
;; push identifier valPeriod4Debot
; colValue
PUSH S3
SETINDEX 7
; end colValue
; expValue
; end expValue
;; push identifier colStake4Debot
; colValue
PUSH S2
SETINDEX 8
; end colValue
; expValue
; end expValue
;; push identifier valStake4Debot
; colValue
PUSH S1
SETINDEX 9
; end colValue
; expValue
;; fetch DeAudits
;; get member sender
GETGLOB 9
GETGLOB 21
; end expValue
;; push identifier cp
PUSH S2
; colValue
CALLREF {
	UNTUPLE 12
	REVERSE 12, 0
	NEWC
	STU 32
	STREF
	STSLICE
	BLKSWAP 9, 1
	NEWC
	STSLICE
	BLKSWAP 8, 1
	NEWC
	STSLICE
	STU 256
	BLKSWAP 6, 1
	NEWC
	STU 256
	STU 256
	STU 128
	STU 128
	STU 128
	STREF
	STBREFR
	STBREFR
	STBREFR
}
ENDC
ROTREV
PUSHINT 267
DICTSETREF
SETGLOB 21
; end colValue
; end function SCgetDAstruct
BLKDROP 11

.macro fetchActivities
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $fetchActivities_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	fetchActivities_internal
.type	fetchActivities_internal, @function
CALL $fetchActivities_internal_macro$

.macro fetchActivities_internal_macro
; function fetchActivities
NULL
;; decl: pubkey
;; Remote call IParticipant.activeDeAudits
;; push identifier m_participant
GETGLOB 19
PUSHSLICE x92614c3a603234c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
NEWC
STSLICECONST 0
;; push identifier pubkey
PUSH S2
ISNULL
THROWIFNOT 64
STSLICECONST 0
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x2dcfe85e
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
DROP
; end function fetchActivities

.macro SCfetchActivities
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
;; param: activeDeAudits
CALLREF {
	CALL $SCfetchActivities_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	SCfetchActivities_internal
.type	SCfetchActivities_internal, @function
CALL $SCfetchActivities_internal_macro$

.macro SCfetchActivities_internal_macro
;; param: activeDeAudits
; function SCfetchActivities
; expValue
; end expValue
;; push identifier activeDeAudits
DUP
; colValue
SETGLOB 24
; end colValue
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; <
	;; get member length
	;; push identifier activeDeAuditsD
	GETGLOB 24
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier activeDeAuditsD
	GETGLOB 24
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	CALLREF {
		CALL $fetchCurAvtivity_internal_macro$
	}
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
; end for
; end function SCfetchActivities
DROP2

.macro fetchCurAvtivity
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: curDeAuditforActiv
CALLREF {
	CALL $fetchCurAvtivity_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	fetchCurAvtivity_internal
.type	fetchCurAvtivity_internal, @function
CALL $fetchCurAvtivity_internal_macro$

.macro fetchCurAvtivity_internal_macro
;; param: curDeAuditforActiv
; function fetchCurAvtivity
NULL
;; decl: pubkey
;; Remote call IParticipant.getCurActivity
;; push identifier m_participant
GETGLOB 19
PUSHSLICE x92610a72806234c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
NEWC
STSLICECONST 0
;; push identifier pubkey
PUSH S2
ISNULL
THROWIFNOT 64
STSLICECONST 0
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x4af3454d
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function fetchCurAvtivity
DROP2

.macro SCfetchCurAvtivity
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDI 1
LDU 8
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: reg
;; param: atype
;; param: act4Arr
;; param: wallet
;; param: curDAactiv
CALLREF {
	CALL $SCfetchCurAvtivity_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	SCfetchCurAvtivity_internal
.type	SCfetchCurAvtivity_internal, @function
CALL $SCfetchCurAvtivity_internal_macro$

.macro SCfetchCurAvtivity_internal_macro
;; param: reg
;; param: atype
;; param: act4Arr
;; param: wallet
;; param: curDAactiv
; function SCfetchCurAvtivity
;; index
;; push identifier curDAactiv
DUP
;; push identifier activitiesD
GETGLOB 23
PUSHINT 267
DICTGET
PUSHREFCONT {
	LDI 1
	LDU 8
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDMSGADDR
	ENDS
	TUPLE 4
}
PUSHREFCONT {
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	TUPLE 4
}
IFELSE
;; decl: at
; expValue
; end expValue
;; push identifier reg
; colValue
PUSH S5
SETINDEX 0
; end colValue
; expValue
; end expValue
;; push identifier atype
; colValue
PUSH S4
SETINDEX 1
; end colValue
; expValue
; end expValue
;; push identifier act4Arr
; colValue
PUSH S3
SETINDEX 2
; end colValue
; expValue
; end expValue
;; push identifier wallet
; colValue
PUSH S2
SETINDEX 3
; end colValue
; expValue
;; fetch activitiesD
;; push identifier curDAactiv
PUSH S1
GETGLOB 23
; end expValue
;; push identifier at
PUSH S2
; colValue
CALLREF {
	UNTUPLE 4
	REVERSE 4, 0
	NEWC
	STI 1
	STU 8
	SWAP
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	STSLICE
}
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 23
; end colValue
; end function SCfetchCurAvtivity
BLKDROP 6

.macro preStart
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
ENDS
;; param: index
CALLREF {
	CALL $preStart_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	preStart_internal
.type	preStart_internal, @function
CALL $preStart_internal_macro$

.macro preStart_internal_macro
;; param: index
; function preStart
CALLREF {
	CALL $start_internal_macro$
}
; end function preStart
DROP

.macro mainMenu
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $mainMenu_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	mainMenu_internal
.type	mainMenu_internal, @function
CALL $mainMenu_internal_macro$

.macro mainMenu_internal_macro
; function mainMenu
PUSHREF {
	.blob x56616c696461746f72206d656e75
}
PUSHREF {
	.blob x
}
PUSHINT 5
NEWDICT
PUSHREF {
	.blob x66657463682064617461
}
PUSHREF {
	.blob x
}
PUSHINT 250476418
TUPLE 3
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHREF {
	.blob x5265676973746572206f6e204441
}
PUSHREF {
	.blob x
}
PUSHINT 1358660711
TUPLE 3
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHREF {
	.blob x76616c6964617465
}
PUSHREF {
	.blob x
}
PUSHINT 657572208
TUPLE 3
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PUSHREF {
	.blob x72657475726e20746f20726f6c65206d656e75
}
PUSHREF {
	.blob x
}
PUSHINT 1888717285
TUPLE 3
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
PUSHINT 3
ROT
PUSHINT 32
DICTUSETB
PUSHREF {
	.blob x51756974
}
PUSHREF {
	.blob x
}
PUSHINT 0
TUPLE 3
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
PUSHINT 4
ROT
PUSHINT 32
DICTUSETB
PAIR
CALLREF {
	CALL $Menu_no_obj_select_macro$
}
; end function mainMenu

.macro goToCore
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
ENDS
;; param: index
CALLREF {
	CALL $goToCore_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	goToCore_internal
.type	goToCore_internal, @function
CALL $goToCore_internal_macro$

.macro goToCore_internal_macro
;; param: index
; function goToCore
;; Remote call IVotingAuditDebot.preSstart
;; push identifier m_participant
GETGLOB 19
;; push identifier m_coreDebot
GETGLOB 17
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000003_
STSLICER
SWAP
NEWC
STSLICECONST x3ffdee86
STSLICE
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function goToCore
DROP

.macro onValidate
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
ENDS
;; param: index
CALLREF {
	CALL $onValidate_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	onValidate_internal
.type	onValidate_internal, @function
CALL $onValidate_internal_macro$

.macro onValidate_internal_macro
;; param: index
; function onValidate
PUSHINT 0
NEWDICT
PAIR
;; decl: m_menu
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; <
	;; get member length
	;; push identifier activeDeAuditsD
	GETGLOB 24
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier activeDeAuditsD
	GETGLOB 24
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	;; decl: actCurDA
	;; index
	;; push identifier actCurDA
	DUP
	;; push identifier DeAudits
	GETGLOB 21
	PUSHINT 267
	DICTGETREF
	PUSHCONT {
		CTOS
		CALLREF {
			LDU 32
			LDREF
			LDMSGADDR
			LDMSGADDRQ
			PUSHCONT {
				;; load next cell
				LDREF
				ENDS
				CTOS
				LDMSGADDR
			}
			IFNOT
			LDMSGADDRQ
			PUSHCONT {
				;; load next cell
				LDREF
				ENDS
				CTOS
				LDMSGADDR
			}
			IFNOT
			LDUQ 256
			PUSHCONT {
				;; load next cell
				LDREF
				ENDS
				CTOS
				LDU 256
			}
			IFNOT
			LDUQ 256
			PUSHCONT {
				;; load next cell
				LDREF
				ENDS
				CTOS
				LDU 256
			}
			IFNOT
			LDUQ 256
			PUSHCONT {
				;; load next cell
				LDREF
				ENDS
				CTOS
				LDU 256
			}
			IFNOT
			LDUQ 128
			PUSHCONT {
				;; load next cell
				LDREF
				ENDS
				CTOS
				LDU 128
			}
			IFNOT
			LDUQ 128
			PUSHCONT {
				;; load next cell
				LDREF
				ENDS
				CTOS
				LDU 128
			}
			IFNOT
			LDUQ 128
			PUSHCONT {
				;; load next cell
				LDREF
				ENDS
				CTOS
				LDU 128
			}
			IFNOT
			LDREF
			ENDS
			TUPLE 12
		}
	}
	PUSHCONT {
		PUSHINT 0
		PUSHREF {
		}
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		PUSHINT 0
		BLKPUSH 5, 0
		PUSHREF {
		}
		TUPLE 12
	}
	IFELSE
	;; decl: da
	NIL
	NEWC
	PUSHSLICE x3d3d3d3d44652041756469742064617461206e616d653a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; get member name
	;; push identifier da
	PUSH S2
	INDEX 1
	CTOS
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	PUSHSLICE x3d3d3d3d0a
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	;; decl: curVdata
	; expValue
	; end expValue
	;; push identifier curVdata
	PUSH2 S4, S0
	PUSHREF {
		.blob x
	}
	PUSHINT 1037851860
	TUPLE 3
	;; array.push(..)
	CALLREF {
		UNTUPLE 3
		XCHG s2
		NEWC
		STREF
		STREF
		STU 32
	}
	SWAP
	UNPAIR
	PUSH S1
	INC
	XCHG s3
	ROTREV
	PUSHINT 32
	DICTUSETB
	PAIR
	; colValue
	POP S5
	; end colValue
	BLKDROP 3
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
DUP
; end expValue
PUSHREF {
	.blob x4261636b20746f206d656e75
}
PUSHREF {
	.blob x
}
PUSHINT 250476418
TUPLE 3
;; array.push(..)
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
NIP
; end colValue
PUSHREF {
	.blob x43686f6f73652044652041756469743a
}
PUSHREF {
	.blob x
}
;; push identifier m_menu
PUSH S2
CALLREF {
	CALL $Menu_no_obj_select_macro$
}
; end function onValidate
DROP2

.macro onsetDaD
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
ENDS
;; param: index
CALLREF {
	CALL $onsetDaD_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	onsetDaD_internal
.type	onsetDaD_internal, @function
CALL $onsetDaD_internal_macro$

.macro onsetDaD_internal_macro
;; param: index
; function onsetDaD
; expValue
; end expValue
;; index
;; push identifier index
DUP
;; push identifier activeDeAuditsD
GETGLOB 24
INDEX 1
PUSHINT 32
DICTUGET
THROWIFNOT 50
; colValue
; end colValue
;; index
;; push identifier curDa
DUP
SETGLOB 25
;; push identifier activitiesD
GETGLOB 23
PUSHINT 267
DICTGET
PUSHREFCONT {
	LDI 1
	LDU 8
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDMSGADDR
	ENDS
	TUPLE 4
}
PUSHREFCONT {
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	TUPLE 4
}
IFELSE
;; decl: at
;; get member act4Arr
;; push identifier at
DUP
INDEX 2
;; decl: curACT4
PUSHINT 0
NEWDICT
PAIR
;; decl: m_menu
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	;; <
	;; get member length
	;; push identifier curACT4
	PUSH2 S0, S2
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	;; push identifier curACT4
	PUSH2 S0, S2
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	;; decl: curACT4adr
	NIL
	NEWC
	PUSHSLICE x3d3d3d3d4143543420616464726573732063686f6f7365206f6e653a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; push identifier curACT4adr
	PUSH S2
	CALLREF {
		CALL $convertAddressToHexString_macro$
	}
	PUSHSLICE x3d3d3d3d0a
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	;; decl: curVdata
	; expValue
	; end expValue
	;; push identifier curVdata
	PUSH2 S3, S0
	PUSHREF {
		.blob x
	}
	PUSHINT 1846436689
	TUPLE 3
	;; array.push(..)
	CALLREF {
		UNTUPLE 3
		XCHG s2
		NEWC
		STREF
		STREF
		STU 32
	}
	SWAP
	UNPAIR
	PUSH S1
	INC
	XCHG s3
	ROTREV
	PUSHINT 32
	DICTUSETB
	PAIR
	; colValue
	POP S4
	; end colValue
	DROP2
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
DUP
; end expValue
PUSHREF {
	.blob x4261636b20746f206d656e75
}
PUSHREF {
	.blob x
}
PUSHINT 250476418
TUPLE 3
;; array.push(..)
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
NIP
; end colValue
PUSHREF {
	.blob x43686f6f736520414354343a
}
PUSHREF {
	.blob x
}
;; push identifier m_menu
PUSH S2
CALLREF {
	CALL $Menu_no_obj_select_macro$
}
; end function onsetDaD
BLKDROP 4

.macro onGetCollatorPhotoLink
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
ENDS
;; param: index
CALLREF {
	CALL $onGetCollatorPhotoLink_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	onGetCollatorPhotoLink_internal
.type	onGetCollatorPhotoLink_internal, @function
CALL $onGetCollatorPhotoLink_internal_macro$

.macro onGetCollatorPhotoLink_internal_macro
;; param: index
; function onGetCollatorPhotoLink
;; index
;; push identifier curDa
GETGLOB 25
;; push identifier activitiesD
GETGLOB 23
PUSHINT 267
DICTGET
PUSHREFCONT {
	LDI 1
	LDU 8
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDMSGADDR
	ENDS
	TUPLE 4
}
PUSHREFCONT {
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	PAIR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	TUPLE 4
}
IFELSE
;; decl: at
;; get member act4Arr
;; push identifier at
DUP
INDEX 2
;; decl: curACT4
; expValue
; end expValue
;; index
;; push identifier index
;; push identifier curACT4
PUSH2 S2, S0
INDEX 1
PUSHINT 32
DICTUGET
THROWIFNOT 50
; colValue
SETGLOB 26
; end colValue
NULL
;; decl: pubkey
;; Remote call IAct4.collatorPhotoLink
;; push identifier curACT4adrACT
GETGLOB 26
PUSHSLICE x926224b8d62234c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
NEWC
STSLICECONST 0
;; push identifier pubkey
PUSH S2
ISNULL
THROWIFNOT 64
STSLICECONST 0
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x0e66c3e2
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function onGetCollatorPhotoLink
BLKDROP 4

.macro onGetPhotoLink
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDREF
ENDS
;; param: collatorPhotoLink
CALLREF {
	CALL $onGetPhotoLink_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	onGetPhotoLink_internal
.type	onGetPhotoLink_internal, @function
CALL $onGetPhotoLink_internal_macro$

.macro onGetPhotoLink_internal_macro
;; param: collatorPhotoLink
; function onGetPhotoLink
; expValue
; end expValue
;; push identifier collatorPhotoLink
DUP
; colValue
SETGLOB 27
; end colValue
NULL
;; decl: pubkey
;; Remote call IAct4.voteMatrix
;; push identifier curACT4adrACT
GETGLOB 26
PUSHSLICE x9263bc93272234c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
NEWC
STSLICECONST 0
;; push identifier pubkey
PUSH S2
ISNULL
THROWIFNOT 64
STSLICECONST 0
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x2950e309
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function onGetPhotoLink
DROP2

.macro onGetAdditionalPhotos
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
;; param: voteMatrix
CALLREF {
	CALL $onGetAdditionalPhotos_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	onGetAdditionalPhotos_internal
.type	onGetAdditionalPhotos_internal, @function
CALL $onGetAdditionalPhotos_internal_macro$

.macro onGetAdditionalPhotos_internal_macro
;; param: voteMatrix
; function onGetAdditionalPhotos
; expValue
; end expValue
;; push identifier voteMatrix
DUP
; colValue
SETGLOB 28
; end colValue
NULL
;; decl: pubkey
;; Remote call IAct4.additionalPhotoLinkArr
;; push identifier curACT4adrACT
GETGLOB 26
PUSHSLICE x92614945ce0a34c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
NEWC
STSLICECONST 0
;; push identifier pubkey
PUSH S2
ISNULL
THROWIFNOT 64
STSLICECONST 0
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x6d3f0078
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function onGetAdditionalPhotos
DROP2

.macro goToValMenubyCurActiv
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
;; param: additionalPhotoLinkArr
CALLREF {
	CALL $goToValMenubyCurActiv_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	goToValMenubyCurActiv_internal
.type	goToValMenubyCurActiv_internal, @function
CALL $goToValMenubyCurActiv_internal_macro$

.macro goToValMenubyCurActiv_internal_macro
;; param: additionalPhotoLinkArr
; function goToValMenubyCurActiv
; expValue
; end expValue
;; push identifier additionalPhotoLinkArr
DUP
; colValue
SETGLOB 29
; end colValue
CALLREF {
	CALL $act4Validmenu_internal_macro$
}
; end function goToValMenubyCurActiv
DROP

.macro act4Validmenu
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $act4Validmenu_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	act4Validmenu_internal
.type	act4Validmenu_internal, @function
CALL $act4Validmenu_internal_macro$

.macro act4Validmenu_internal_macro
; function act4Validmenu
PUSHINT 0
NEWDICT
PAIR
;; decl: m_menu
; expValue
DUP
; end expValue
PUSHREF {
	.blob x73686f7720616374342064617461
}
PUSHREF {
	.blob x
}
PUSHINT 311294702
TUPLE 3
;; array.push(..)
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
PUSHREF {
	.blob x766f746520666f72
}
PUSHREF {
	.blob x
}
PUSHINT 461021821
TUPLE 3
;; array.push(..)
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
PUSHREF {
	.blob x766f746520616761696e7374
}
PUSHREF {
	.blob x
}
PUSHINT 1853070333
TUPLE 3
;; array.push(..)
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
PUSHREF {
	.blob x4261636b20746f206d656e75
}
PUSHREF {
	.blob x
}
PUSHINT 250476418
TUPLE 3
;; array.push(..)
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
NIP
; end colValue
PUSHREF {
	.blob x4163743420766f74696e673a
}
PUSHREF {
	.blob x
}
;; push identifier m_menu
PUSH S2
CALLREF {
	CALL $Menu_no_obj_select_macro$
}
DROP
; end function act4Validmenu

.macro showACT4dt
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
ENDS
;; param: index
CALLREF {
	CALL $showACT4dt_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	showACT4dt_internal
.type	showACT4dt_internal, @function
CALL $showACT4dt_internal_macro$

.macro showACT4dt_internal_macro
;; param: index
; function showACT4dt
PUSHINT 0
NIL
NEWC
PUSHSLICE x2a2a2a2a2070686f746f206c696e6b206f6620616374343a200a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier curPhotoLinkActivs
GETGLOB 27
CTOS
CALLREF {
	CALL $storeStringInBuilders_macro$
}
PUSHSLICE x0a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; <
	;; get member length
	;; push identifier voteMatrixD
	GETGLOB 28
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier voteMatrixD
	GETGLOB 28
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	;; decl: curVoteFromMatrix
	PUSHINT 0
	NIL
	NEWC
	PUSHSLICE x2a2a2a2a0a696e646578206f662063616e6469646174653a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; push identifier i
	PUSH S4
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	PUSHSLICE x0a616d6f756e74206f6620766f7465733a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; push identifier curVoteFromMatrix
	PUSH S3
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	PUSHSLICE x0a2a2a2a0a
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	CALLREF {
		CALL $Terminal_no_obj_print_macro$
	}
	DROP
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; for
PUSHINT 0
;; decl: k
PUSHCONT {
	;; push identifier k
	DUP
	;; <
	;; get member length
	;; push identifier additionalPhotoLinkArrD
	GETGLOB 29
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier k
	DUP
	;; push identifier additionalPhotoLinkArrD
	GETGLOB 29
	INDEX 1
	PUSHINT 32
	DICTUGETREF
	THROWIFNOT 50
	;; decl: curAdditPhotoLink
	PUSHINT 0
	NIL
	NEWC
	PUSHSLICE x2a2a2a206164646974696f6e616c2070686f746f206c696e6b3a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; push identifier curAdditPhotoLink
	PUSH S3
	CTOS
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	PUSHSLICE x0a
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	CALLREF {
		CALL $Terminal_no_obj_print_macro$
	}
	DROP
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
CALLREF {
	CALL $act4Validmenu_internal_macro$
}
; end function showACT4dt
DROP

.macro VoteForValidator
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: value
CALLREF {
	CALL $VoteForValidator_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	VoteForValidator_internal
.type	VoteForValidator_internal, @function
CALL $VoteForValidator_internal_macro$

.macro VoteForValidator_internal_macro
;; param: value
; function VoteForValidator
PUSHINT 0
NIL
NEWC
PUSHREFSLICE {
	.blob x3d3d3d3d3d596f752061726520676f696e6720746f20766f746520666f723a20
}
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier curACT4adrACT
GETGLOB 26
CALLREF {
	CALL $convertAddressToHexString_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
NULL
;; decl: pubkey
;; Remote call IParticipant.validateFor
;; push identifier m_participant
GETGLOB 19
PUSHSLICE x92600000000234c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
;; push identifier GRAMS_VALIDATE
GETGLOB 16
;; push identifier curACT4adrACT
GETGLOB 26
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier pubkey
PUSH2 S4, S4
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	STU 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x2653df7c
ROTREV
NEWC
STSLICE
STU 128
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
CALLREF {
	CALL $mainMenu_internal_macro$
}
; end function VoteForValidator
DROP2

.macro VoteAgainstValidator
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: value
CALLREF {
	CALL $VoteAgainstValidator_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	VoteAgainstValidator_internal
.type	VoteAgainstValidator_internal, @function
CALL $VoteAgainstValidator_internal_macro$

.macro VoteAgainstValidator_internal_macro
;; param: value
; function VoteAgainstValidator
PUSHINT 0
NIL
NEWC
PUSHREFSLICE {
	.blob x3d3d3d3d3d596f752061726520676f696e6720746f20766f746520616761696e73743a20
}
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier curACT4adrACT
GETGLOB 26
CALLREF {
	CALL $convertAddressToHexString_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
NULL
;; decl: pubkey
;; Remote call IParticipant.validateAgainst
;; push identifier m_participant
GETGLOB 19
PUSHSLICE x92600000000234c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
;; push identifier GRAMS_VALIDATE
GETGLOB 16
;; push identifier curACT4adrACT
GETGLOB 26
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier pubkey
PUSH2 S4, S4
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	STU 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x517a2631
ROTREV
NEWC
STSLICE
STU 128
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
CALLREF {
	CALL $mainMenu_internal_macro$
}
; end function VoteAgainstValidator
DROP2

.macro DAmenu
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
ENDS
;; param: index
CALLREF {
	CALL $DAmenu_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	DAmenu_internal
.type	DAmenu_internal, @function
CALL $DAmenu_internal_macro$

.macro DAmenu_internal_macro
;; param: index
; function DAmenu
PUSHINT 0
NEWDICT
PAIR
;; decl: m_menu
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; <
	;; get member length
	;; push identifier keysDeAuditD
	GETGLOB 22
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier keysDeAuditD
	GETGLOB 22
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	;; decl: curK
	;; index
	;; push identifier curK
	DUP
	;; push identifier DeAudits
	GETGLOB 21
	PUSHINT 267
	DICTGETREF
	PUSHCONT {
		CTOS
		CALLREF {
			LDU 32
			LDREF
			LDMSGADDR
			LDMSGADDRQ
			PUSHCONT {
				;; load next cell
				LDREF
				ENDS
				CTOS
				LDMSGADDR
			}
			IFNOT
			LDMSGADDRQ
			PUSHCONT {
				;; load next cell
				LDREF
				ENDS
				CTOS
				LDMSGADDR
			}
			IFNOT
			LDUQ 256
			PUSHCONT {
				;; load next cell
				LDREF
				ENDS
				CTOS
				LDU 256
			}
			IFNOT
			LDUQ 256
			PUSHCONT {
				;; load next cell
				LDREF
				ENDS
				CTOS
				LDU 256
			}
			IFNOT
			LDUQ 256
			PUSHCONT {
				;; load next cell
				LDREF
				ENDS
				CTOS
				LDU 256
			}
			IFNOT
			LDUQ 128
			PUSHCONT {
				;; load next cell
				LDREF
				ENDS
				CTOS
				LDU 128
			}
			IFNOT
			LDUQ 128
			PUSHCONT {
				;; load next cell
				LDREF
				ENDS
				CTOS
				LDU 128
			}
			IFNOT
			LDUQ 128
			PUSHCONT {
				;; load next cell
				LDREF
				ENDS
				CTOS
				LDU 128
			}
			IFNOT
			LDREF
			ENDS
			TUPLE 12
		}
	}
	PUSHCONT {
		PUSHINT 0
		PUSHREF {
		}
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		PUSHINT 0
		BLKPUSH 5, 0
		PUSHREF {
		}
		TUPLE 12
	}
	IFELSE
	;; decl: cp
	PUSHREF {
	}
	;; decl: status
	;; push identifier now
	NOW
	;; uint256
	;; decl: time
	;; if
	;; push identifier time
	;; <
	;; get member timeStart
	;; push identifier cp
	PUSH2 S0, S2
	INDEX 5
	LESS
	PUSHCONT {
		; expValue
		; end expValue
		PUSHREF {
			.blob x6e6f742073746172746564
		}
		; colValue
		POP S2
		; end colValue
	}
	PUSHCONT {
		;; if
		;; push identifier time
		;; >
		;; get member timeStart
		;; push identifier cp
		PUSH2 S0, S2
		INDEX 5
		GREATER
		;; short-circuiting &&
		DUP
		PUSHCONT {
			DROP
			;; push identifier time
			;; <
			;; get member timeStart
			;; push identifier cp
			PUSH2 S0, S2
			INDEX 5
			;; +
			;; get member colPeriod
			;; push identifier cp
			PUSH S4
			INDEX 6
			ADD
			LESS
		}
		IF
		PUSHCONT {
			; expValue
			; end expValue
			PUSHREF {
				.blob x6265747765656e20737461727420616e6420636f6c20706572696f64
			}
			; colValue
			POP S2
			; end colValue
		}
		PUSHCONT {
			;; if
			;; push identifier time
			;; >
			;; get member timeStart
			;; push identifier cp
			PUSH2 S0, S2
			INDEX 5
			;; +
			;; get member colPeriod
			;; push identifier cp
			PUSH S4
			INDEX 6
			ADD
			GREATER
			;; short-circuiting &&
			DUP
			PUSHCONT {
				DROP
				;; push identifier time
				;; <
				;; get member timeStart
				;; push identifier cp
				PUSH2 S0, S2
				INDEX 5
				;; +
				;; get member colPeriod
				;; push identifier cp
				PUSH S4
				INDEX 6
				ADD
				;; +
				;; get member valPeriod
				;; push identifier cp
				PUSH S4
				INDEX 7
				ADD
				LESS
			}
			IF
			PUSHCONT {
				; expValue
				; end expValue
				PUSHREF {
					.blob x6265747765656e20636f6c20616e642076616c20706572696f64
				}
				; colValue
				POP S2
				; end colValue
			}
			PUSHCONT {
				; expValue
				; end expValue
				PUSHREF {
					.blob x656e646564
				}
				; colValue
				POP S2
				; end colValue
			}
			IFELSE
			;; end if
		}
		IFELSE
		;; end if
	}
	IFELSE
	;; end if
	NIL
	NEWC
	PUSHSLICE x3d3d3d3d3d3d3d0a44416e616d653a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; get member name
	;; push identifier cp
	PUSH S4
	INDEX 1
	CTOS
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	PUSHSLICE x0a74696d6553746172743a
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; get member timeStart
	;; push identifier cp
	PUSH S4
	INDEX 5
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	PUSHSLICE x0a636f6c506572696f643a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; get member colPeriod
	;; push identifier cp
	PUSH S4
	INDEX 6
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	PUSHSLICE x0a76616c506572696f643a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; get member valPeriod
	;; push identifier cp
	PUSH S4
	INDEX 7
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	PUSHSLICE x0a76616c5374616b653a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; get member valStake
	;; push identifier cp
	PUSH S4
	INDEX 9
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	PUSHSLICE x0a7374617475733a
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; push identifier status
	PUSH S3
	CTOS
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	PUSHSLICE x0a0a
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	;; decl: curVdata
	; expValue
	; end expValue
	;; push identifier curVdata
	PUSH2 S6, S0
	PUSHREF {
		.blob x
	}
	PUSHINT 1539101388
	TUPLE 3
	;; array.push(..)
	CALLREF {
		UNTUPLE 3
		XCHG s2
		NEWC
		STREF
		STREF
		STU 32
	}
	SWAP
	UNPAIR
	PUSH S1
	INC
	XCHG s3
	ROTREV
	PUSHINT 32
	DICTUSETB
	PAIR
	; colValue
	POP S7
	; end colValue
	BLKDROP 5
	;; ++
	; expValue
	; end expValue
	INC
	UFITS 8
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
DUP
; end expValue
PUSHREF {
	.blob x4261636b20746f2076616c696461746f72206d656e75
}
PUSHREF {
	.blob x
}
PUSHINT 250476418
TUPLE 3
;; array.push(..)
CALLREF {
	UNTUPLE 3
	XCHG s2
	NEWC
	STREF
	STREF
	STU 32
}
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
NIP
; end colValue
PUSHREF {
	.blob x43686f6f73652044413a
}
PUSHREF {
	.blob x
}
;; push identifier m_menu
PUSH S2
CALLREF {
	CALL $Menu_no_obj_select_macro$
}
; end function DAmenu
DROP2

.macro showVotingAuditss
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
ENDS
;; param: index
CALLREF {
	CALL $showVotingAuditss_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	showVotingAuditss_internal
.type	showVotingAuditss_internal, @function
CALL $showVotingAuditss_internal_macro$

.macro showVotingAuditss_internal_macro
;; param: index
; function showVotingAuditss
; expValue
; end expValue
;; index
;; push identifier index
DUP
;; push identifier keysDeAuditD
GETGLOB 22
INDEX 1
PUSHINT 32
DICTUGET
THROWIFNOT 50
; colValue
; end colValue
;; index
;; push identifier cureDA
DUP
SETGLOB 30
;; push identifier DeAudits
GETGLOB 21
PUSHINT 267
DICTGETREF
PUSHCONT {
	CTOS
	CALLREF {
		LDU 32
		LDREF
		LDMSGADDR
		LDMSGADDRQ
		PUSHCONT {
			;; load next cell
			LDREF
			ENDS
			CTOS
			LDMSGADDR
		}
		IFNOT
		LDMSGADDRQ
		PUSHCONT {
			;; load next cell
			LDREF
			ENDS
			CTOS
			LDMSGADDR
		}
		IFNOT
		LDUQ 256
		PUSHCONT {
			;; load next cell
			LDREF
			ENDS
			CTOS
			LDU 256
		}
		IFNOT
		LDUQ 256
		PUSHCONT {
			;; load next cell
			LDREF
			ENDS
			CTOS
			LDU 256
		}
		IFNOT
		LDUQ 256
		PUSHCONT {
			;; load next cell
			LDREF
			ENDS
			CTOS
			LDU 256
		}
		IFNOT
		LDUQ 128
		PUSHCONT {
			;; load next cell
			LDREF
			ENDS
			CTOS
			LDU 128
		}
		IFNOT
		LDUQ 128
		PUSHCONT {
			;; load next cell
			LDREF
			ENDS
			CTOS
			LDU 128
		}
		IFNOT
		LDUQ 128
		PUSHCONT {
			;; load next cell
			LDREF
			ENDS
			CTOS
			LDU 128
		}
		IFNOT
		LDREF
		ENDS
		TUPLE 12
	}
}
PUSHCONT {
	PUSHINT 0
	PUSHREF {
	}
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	BLKPUSH 5, 0
	PUSHREF {
	}
	TUPLE 12
}
IFELSE
;; decl: cr
; expValue
; end expValue
;; get member name
;; push identifier cr
DUP
INDEX 1
; colValue
PUSHINT 32
SETGLOBVAR
; end colValue
; expValue
; end expValue
;; get member valStake
;; push identifier cr
DUP
INDEX 9
; colValue
SETGLOB 31
; end colValue
;; push identifier now
NOW
;; uint256
;; decl: time
;; if
;; push identifier time
;; >
;; get member timeStart
;; push identifier cr
PUSH2 S0, S1
INDEX 5
;; +
;; get member colPeriod
;; push identifier cr
PUSH S3
INDEX 6
ADD
GREATER
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier time
	;; <
	;; get member timeStart
	;; push identifier cr
	PUSH2 S0, S1
	INDEX 5
	;; +
	;; get member colPeriod
	;; push identifier cr
	PUSH S3
	INDEX 6
	ADD
	;; +
	;; get member valPeriod
	;; push identifier cr
	PUSH S3
	INDEX 7
	ADD
	LESS
}
IF
PUSHCONT {
	PUSHINT 1133541433
	NIL
	NEWC
	PUSHSLICE x3d3d3d3d56616c69646174696f6e207374616b652069733a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	;; push identifier valSt
	GETGLOB 31
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	PUSHSLICE x20666f7220312076616c69643d3d3d3d0a
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	PUSHINT 0
	PUSHINT 0
	PUSHINT 10000000000000
	CALLREF {
		CALL $AmountInput_no_obj_get_macro$
	}
}
PUSHCONT {
	PUSHINT 0
	PUSHREF {
		.blob x596f75206e65656420746f2063686f6f736520646541756469742074686174206973206265747765656e20636f6c20616e642076616c20706572696f64
	}
	CALLREF {
		CALL $Terminal_no_obj_print_macro$
	}
	PUSHINT 0
	CALLREF {
		CALL $DAmenu_internal_macro$
	}
}
IFELSE
;; end if
; end function showVotingAuditss
BLKDROP 3

.macro setValStake
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: value
CALLREF {
	CALL $setValStake_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setValStake_internal
.type	setValStake_internal, @function
CALL $setValStake_internal_macro$

.macro setValStake_internal_macro
;; param: value
; function setValStake
; expValue
; end expValue
;; push identifier value
DUP
; colValue
PUSHINT 33
SETGLOBVAR
; end colValue
PUSHINT 0
NIL
NEWC
PUSHREFSLICE {
	.blob x3d3d3d3d3d596f752061726520676f696e6720746f2074616b65207061727420696e203c3c3c
}
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier nameDD
PUSHINT 32
GETGLOBVAR
CTOS
CALLREF {
	CALL $storeStringInBuilders_macro$
}
PUSHSLICE x3e3e3e2c2069742a7320616464726573733a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier cureDA
GETGLOB 30
CALLREF {
	CALL $convertAddressToHexString_macro$
}
PUSHSLICE x2c207374616b6520666f7220312076616c69646174696f6e20697320
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier valSt
GETGLOB 31
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
PUSHSLICE x2c20796f752061726520676f696e6720746f2073656e6420
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier curGramsForSend
PUSHINT 33
GETGLOBVAR
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
PUSHSLICE x3d3d3d3d3d0a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
CALLREF {
	CALL $setValStakeCall_internal_macro$
}
; end function setValStake
DROP

.macro setValStakeCall
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $setValStakeCall_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setValStakeCall_internal
.type	setValStakeCall_internal, @function
CALL $setValStakeCall_internal_macro$

.macro setValStakeCall_internal_macro
; function setValStakeCall
NULL
;; decl: pubkey
;; Remote call IParticipant.registrationForValidation
;; push identifier m_participant
GETGLOB 19
PUSHSLICE x92600000000234c190b0174_
NEWC
STSLICE
STSLICE
PUSHINT 1
STUR 6
;; push identifier curGramsForSend
PUSHINT 33
GETGLOBVAR
;; push identifier cureDA
GETGLOB 30
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier pubkey
PUSH2 S4, S4
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	STU 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 291
STUR 32
STSLICECONST x71ed7ba6
ROTREV
NEWC
STSLICE
STU 128
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
CALLREF {
	CALL $start_internal_macro$
}
DROP
; end function setValStakeCall

.macro someError
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
LDU 32
ENDS
;; param: sdkError
;; param: exitCode
CALLREF {
	CALL $someError_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	someError_internal
.type	someError_internal, @function
CALL $someError_internal_macro$

.macro someError_internal_macro
;; param: sdkError
;; param: exitCode
; function someError
PUSHINT 0
NIL
NEWC
PUSHSLICE x73646b4572726f723a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier sdkError
PUSH S4
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
PUSHSLICE x0a65786974434f64653a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier exitCode
PUSH S3
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
PUSHINT 1
PUSHREF {
	.blob x4261636b20746f206d656e752e2e2e
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
; end function someError
DROP2

.macro getDebotInfo
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $getDebotInfo_internal_macro$
}
;; emitting 10 value(s)
PUSH S10
PUSHCONT {
	PUSH S12
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	REVERSE 10, 1
	BLKSWAP 10, 1
	NEWC
	STSLICECONST x00000deb
	STREF
	STREF
	STREF
	BLKSWAP 7, 1
	NEWC
	STREF
	STREF
	STSLICE
	STREF
	BLKSWAP 3, 1
	NEWC
	STREF
	STREF
	STREF
	STBREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	BLKDROP 10
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getDebotInfo_internal
.type	getDebotInfo_internal, @function
CALL $getDebotInfo_internal_macro$

.macro getDebotInfo_internal_macro
;; ret param: name
PUSHREF {
}
;; ret param: version
PUSHREF {
}
;; ret param: publisher
PUSHREF {
}
;; ret param: caption
PUSHREF {
}
;; ret param: author
PUSHREF {
}
;; ret param: support
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: hello
PUSHREF {
}
;; ret param: language
PUSHREF {
}
;; ret param: dabi
PUSHREF {
}
;; ret param: icon
PUSHREF {
}
; function getDebotInfo
; expValue
; end expValue
PUSHREF {
	.blob x52616469616e636520566f74696e67204175646974204465426f74202d2056616c696461746f72
}
; colValue
POP S10
; end colValue
; expValue
; end expValue
PUSHREF {
	.blob x302e312e30
}
; colValue
POP S9
; end colValue
; expValue
; end expValue
PUSHREF {
	.blob x52616469616e6365205465616d
}
; colValue
POP S8
; end colValue
; expValue
; end expValue
PUSHREF {
	.blob x4465426f7420666f7220446541756469742062792052616469616e6365205465616d
}
; colValue
POP S7
; end colValue
; expValue
; end expValue
PUSHREF {
	.blob x52616469616e6365205465616d
}
; colValue
POP S6
; end colValue
;; address.makeAddrStd()
PUSHSLICE x801082511da76abb39b5f500d00fe05415c182d354bdbfd114f134c904852ead529_
; expValue
; end expValue
; colValue
POP S5
; end colValue
; expValue
; end expValue
PUSHREF {
	.blob x546861742773206465626f7420666f7220566f74696e672041756469742e20446576656c6f7065642062792052616469616e6365205465616d
}
; colValue
POP S4
; end colValue
; expValue
; end expValue
PUSHREF {
	.blob x656e
}
; colValue
POP S3
; end colValue
;; push identifier m_debotAbi
GETGLOB 11
DUP
ISNULL
THROWIF 63
; expValue
; end expValue
; colValue
POP S2
; end colValue
; expValue
; end expValue
;; push identifier m_icon
; colValue
DROP
GETGLOB 20
; end colValue
; end function getDebotInfo

.macro getRequiredInterfaces
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $getRequiredInterfaces_internal_macro$
}
;; emitting 1 value(s)
PUSH S1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x00000000000000000000000036190b42a_
	STSLICER
	SWAP
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getRequiredInterfaces_internal
.type	getRequiredInterfaces_internal, @function
CALL $getRequiredInterfaces_internal_macro$

.macro getRequiredInterfaces_internal_macro
;; ret param: interfaces
PUSHINT 0
NEWDICT
PAIR
; function getRequiredInterfaces
;; return
PUSHINT 1
NEWDICT
PUSHINT 61327837143279038880828163389518064523935669597243029312953519799871119370467
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PAIR
NIP
; end function getRequiredInterfaces

.macro getDebotOptions
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $getDebotOptions_internal_macro$
}
;; emitting 4 value(s)
PUSH S4
PUSHCONT {
	PUSH S6
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	REVERSE 4, 1
	BLKSWAP 4, 1
	NEWC
	STSLICECONST xfdecd0db
	STU 8
	STREF
	STREF
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	BLKDROP 4
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getDebotOptions_internal
.type	getDebotOptions_internal, @function
CALL $getDebotOptions_internal_macro$

.macro getDebotOptions_internal_macro
;; ret param: options
PUSHINT 0
;; ret param: debotAbi
PUSHREF {
}
;; ret param: targetAbi
PUSHREF {
}
;; ret param: targetAddr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; function getDebotOptions
;; push identifier m_debotAbi
GETGLOB 11
ISNULL
NOT
PUSHCONT {
	;; push identifier m_debotAbi
	GETGLOB 11
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	PUSHREF {
		.blob x
	}
}
IFELSE
; expValue
; end expValue
; colValue
POP S3
; end colValue
;; push identifier m_targetAbi
GETGLOB 12
ISNULL
NOT
PUSHCONT {
	;; push identifier m_targetAbi
	GETGLOB 12
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	PUSHREF {
		.blob x
	}
}
IFELSE
; expValue
; end expValue
; colValue
POP S2
; end colValue
;; push identifier m_target
GETGLOB 13
ISNULL
NOT
PUSHCONT {
	;; push identifier m_target
	GETGLOB 13
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
}
IFELSE
; expValue
; end expValue
; colValue
NIP
; end colValue
; expValue
; end expValue
;; push identifier m_options
GETGLOB 10
; colValue
POP S4
; end colValue
; end function getDebotOptions

.macro setABI
DROP
GETGLOB 8
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDREF
ENDS
;; param: dabi
CALLREF {
	CALL $setABI_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setABI_internal
.type	setABI_internal, @function
CALL $setABI_internal_macro$

.macro setABI_internal_macro
;; param: dabi
; function setABI
GETGLOB 2
;; ==
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
EQUAL
THROWIFNOT 100
ACCEPT
; expValue
;; fetch m_options
; end expValue
GETGLOB 10
PUSHINT 1
OR
; colValue
SETGLOB 10
; end colValue
; expValue
; end expValue
;; push identifier dabi
; colValue
; end colValue
; end function setABI
SETGLOB 11

.macro c7_to_c4
PUSHINT 33
GETGLOBVAR
PUSHINT 32
GETGLOBVAR
GETGLOB 31
GETGLOB 30
GETGLOB 29
GETGLOB 28
GETGLOB 27
GETGLOB 26
GETGLOB 25
GETGLOB 24
GETGLOB 23
GETGLOB 22
GETGLOB 21
GETGLOB 20
GETGLOB 19
GETGLOB 18
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 6
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STU 1
STU 8
SWAP
DUP
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	NEWC
	STREF
	SWAP
	STSLICECONST 1
	STBREF
}
IFELSE
SWAP
DUP
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	NEWC
	STREF
	SWAP
	STSLICECONST 1
	STBREF
}
IFELSE
SWAP
DUP
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	NEWC
	STSLICE
	SWAP
	STSLICECONST 1
	STBREF
}
IFELSE
STSLICE
PUSHINT 19
PUSHINT 1
BLKSWX
NEWC
STSLICE
STU 128
PUSHINT 17
PUSHINT 1
BLKSWX
NEWC
STSLICE
BLKSWAP 16, 1
NEWC
STSLICE
BLKSWAP 15, 1
NEWC
STSLICE
STREF
STDICT
SWAP
UNPAIR
XCHG s2
STU 32
STDICT
BLKSWAP 11, 1
NEWC
STDICT
SWAP
UNPAIR
XCHG s2
STU 32
STDICT
STSLICE
BLKSWAP 8, 1
NEWC
STSLICE
STREF
SWAP
UNPAIR
XCHG s2
STU 32
STDICT
SWAP
UNPAIR
XCHG s2
STU 32
STDICT
BLKSWAP 4, 1
NEWC
STSLICE
STU 128
STREF
STU 128
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDU 8
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	PLDREF
}
IFNOT
SWAP
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	PLDREF
}
IFNOT
SWAP
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	LDMSGADDR
	DROP
}
IFNOT
SWAP
LDMSGADDR
;; load next cell
LDREF
ENDS
CTOS
LDMSGADDR
LDU 128
;; load next cell
LDREF
ENDS
CTOS
LDMSGADDR
;; load next cell
LDREF
ENDS
CTOS
LDMSGADDR
;; load next cell
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
LDDICT
LDU 32
LDDICT
ROTREV
PAIR
SWAP
;; load next cell
LDREF
ENDS
CTOS
LDDICT
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDMSGADDR
;; load next cell
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDU 32
LDDICT
ROTREV
PAIR
SWAP
;; load next cell
LDREF
ENDS
CTOS
LDMSGADDR
LDU 128
LDREF
LDU 128
ENDS
PUSHINT 33
SETGLOBVAR
PUSHINT 32
SETGLOBVAR
SETGLOB 31
SETGLOB 30
SETGLOB 29
SETGLOB 28
SETGLOB 27
SETGLOB 26
SETGLOB 25
SETGLOB 24
SETGLOB 23
SETGLOB 22
SETGLOB 21
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 8
; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDU 8
	LDOPTREF
	SWAP
	DUP
	ISNULL
	PUSHCONT {
		CTOS
		PLDREF
	}
	IFNOT
	SWAP
	LDOPTREF
	SWAP
	DUP
	ISNULL
	PUSHCONT {
		CTOS
		PLDREF
	}
	IFNOT
	SWAP
	LDOPTREF
	SWAP
	DUP
	ISNULL
	PUSHCONT {
		CTOS
		LDMSGADDR
		DROP
	}
	IFNOT
	SWAP
	LDMSGADDR
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
	LDU 128
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
	LDREF
	LDDICT
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDDICT
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDMSGADDR
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
	LDREF
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SWAP
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
	LDU 128
	LDREF
	LDU 128
	ENDS
	PUSHINT 33
	SETGLOBVAR
	PUSHINT 32
	SETGLOBVAR
	SETGLOB 31
	SETGLOB 30
	SETGLOB 29
	SETGLOB 28
	SETGLOB 27
	SETGLOB 26
	SETGLOB 25
	SETGLOB 24
	SETGLOB 23
	SETGLOB 22
	SETGLOB 21
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 8
	; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init m_options
	PUSHINT 0
	SETGLOB 10
	; init m_debotAbi
	NULL
	SETGLOB 11
	; init m_targetAbi
	NULL
	SETGLOB 12
	; init m_target
	NULL
	SETGLOB 13
	; init m_ATdebAddress
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 14
	; init m_CLdebAddress
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 15
	; init GRAMS_VALIDATE
	PUSHINT 0
	SETGLOB 16
	; init m_coreDebot
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 17
	; init DeAuditRoot
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 18
	; init m_participant
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 19
	; init m_icon
	PUSHREF {
	}
	SETGLOB 20
	; init DeAudits
	NEWDICT
	SETGLOB 21
	; init keysDeAuditD
	PUSHINT 0
	NEWDICT
	PAIR
	SETGLOB 22
	; init activitiesD
	NEWDICT
	SETGLOB 23
	; init activeDeAuditsD
	PUSHINT 0
	NEWDICT
	PAIR
	SETGLOB 24
	; init curDa
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 25
	; init curACT4adrACT
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 26
	; init curPhotoLinkActivs
	PUSHREF {
	}
	SETGLOB 27
	; init voteMatrixD
	PUSHINT 0
	NEWDICT
	PAIR
	SETGLOB 28
	; init additionalPhotoLinkArrD
	PUSHINT 0
	NEWDICT
	PAIR
	SETGLOB 29
	; init cureDA
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 30
	; init valSt
	PUSHINT 0
	SETGLOB 31
	; init nameDD
	PUSHREF {
	}
	PUSHINT 32
	SETGLOBVAR
	; init curGramsForSend
	PUSHINT 0
	PUSHINT 33
	SETGLOBVAR
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
TRUE
SETGLOB 8
	;; init state var: GRAMS_VALIDATE
	PUSHINT 600000000
	SETGLOB 16
	;; init state var: DeAuditRoot
	;; address.makeAddrStd()
	PUSHSLICE x80155486eb1e2f6d5ab13249db1b5ab6f77f9f7b76ccc226b289e86b7275ca85dfd_
	SETGLOB 18
	;; init state var: m_participant
	;; address.makeAddrStd()
	PUSHSLICE x800705569824a4c719fbbc66c9f7cea21ab4d4a70c78c55227d3386c27d4ca87da1_
	SETGLOB 19
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
;; param: transaction_type
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60 ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.internal-alias :main_external, -1
.internal :main_external
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice havePubkey
	PUSHCONT {
		LDU 256       ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG s3
		SWAP
	}
	PUSHCONT {
		XCHG s2
		GETGLOB 2
	}
	IFELSE
	DUP
	SETGLOB 5
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1      ; havePubkey msgSlice
	SWAP       ; msgSlice havePubkey
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.macro activitiesD
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 23
PUSH S1
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000f2e604e4
	NEWC
	STSLICE
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
TRUE
SETGLOB 7

.globl	AmountInput_with_obj_get
.type	AmountInput_with_obj_get, @function
CALL $AmountInput_with_obj_get_macro$

.macro AmountInput_with_obj_get_macro
;; param: answerId
;; param: prompt
;; param: decimals
;; param: min
;; param: max
; function get
;; address.makeAddrStd()
PUSHSLICE x9c343a68e133c5382c4991120c33b5e40f7bc31d25bea4414a9798db0b0613d9d09_
;; decl: addr
;; Remote call IAmountInput.get
;; push identifier max
;; push identifier min
;; push identifier decimals
PUSH3 S1, S2, S3
;; push identifier prompt
;; push identifier answerId
;; push identifier addr
PUSH3 S7, S8, S3
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000003_
STSLICER
BLKSWAP 5, 1
NEWC
STSLICECONST x16740bd3
STU 32
STREF
STU 8
STU 128
STU 128
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function get
BLKDROP 5

.globl	AmountInput_no_obj_get
.type	AmountInput_no_obj_get, @function
CALL $AmountInput_no_obj_get_macro$

.macro AmountInput_no_obj_get_macro
;; param: answerId
;; param: prompt
;; param: decimals
;; param: min
;; param: max
; function get
;; address.makeAddrStd()
PUSHSLICE x9c343a68e133c5382c4991120c33b5e40f7bc31d25bea4414a9798db0b0613d9d09_
;; decl: addr
;; Remote call IAmountInput.get
;; push identifier max
;; push identifier min
;; push identifier decimals
PUSH3 S1, S2, S3
;; push identifier prompt
;; push identifier answerId
;; push identifier addr
PUSH3 S7, S8, S3
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000003_
STSLICER
BLKSWAP 5, 1
NEWC
STSLICECONST x16740bd3
STU 32
STREF
STU 8
STU 128
STU 128
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function get
BLKDROP 6

.globl	Menu_with_obj_select
.type	Menu_with_obj_select, @function
CALL $Menu_with_obj_select_macro$

.macro Menu_with_obj_select_macro
;; param: title
;; param: description
;; param: items
; function select
;; address.makeAddrStd()
PUSHSLICE x9c358349a7d9d4465c92f07be94475030479b94640bb8b19a4189b64b384ac0b691_
;; decl: addr
;; Remote call IMenu.select
;; push identifier items
;; push identifier description
;; push identifier title
PUSH3 S1, S2, S3
;; push identifier addr
PUSH S3
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000000d3028c73_
STSLICER
STREF
STREF
SWAP
UNPAIR
XCHG s2
STU 32
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
; end function select
BLKDROP 3

.globl	Menu_no_obj_select
.type	Menu_no_obj_select, @function
CALL $Menu_no_obj_select_macro$

.macro Menu_no_obj_select_macro
;; param: title
;; param: description
;; param: items
; function select
;; address.makeAddrStd()
PUSHSLICE x9c358349a7d9d4465c92f07be94475030479b94640bb8b19a4189b64b384ac0b691_
;; decl: addr
;; Remote call IMenu.select
;; push identifier items
;; push identifier description
;; push identifier title
PUSH3 S1, S2, S3
;; push identifier addr
PUSH S3
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000000d3028c73_
STSLICER
STREF
STREF
SWAP
UNPAIR
XCHG s2
STU 32
STDICT
ENDC
PUSHINT 0
SENDRAWMSG
; end function select
BLKDROP 4

.globl	Terminal_with_obj_print
.type	Terminal_with_obj_print, @function
CALL $Terminal_with_obj_print_macro$

.macro Terminal_with_obj_print_macro
;; param: answerId
;; param: message
; function print
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.print
;; push identifier message
;; push identifier answerId
;; push identifier addr
PUSH3 S1, S2, S0
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x398968000000000000000000000000000019cc9385_
STSLICER
STU 32
STREF
ENDC
PUSHINT 0
SENDRAWMSG
; end function print
DROP2

.globl	Terminal_no_obj_print
.type	Terminal_no_obj_print, @function
CALL $Terminal_no_obj_print_macro$

.macro Terminal_no_obj_print_macro
;; param: answerId
;; param: message
; function print
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.print
;; push identifier message
;; push identifier answerId
;; push identifier addr
PUSH3 S1, S2, S0
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x398968000000000000000000000000000019cc9385_
STSLICER
STU 32
STREF
ENDC
PUSHINT 0
SENDRAWMSG
; end function print
BLKDROP 3

.macro public_function_selector
DUP
PUSHINT 1037851860
LEQ
IFJMPREF {
	DUP
	PUSHINT 258836457
	LEQ
	IFJMPREF {
		DUP
		EQINT 1
		IFJMPREF {
			CALL $start$
		}
		DUP
		PUSHINT 3563
		EQUAL
		IFJMPREF {
			CALL $getDebotInfo$
		}
		DUP
		PUSHINT 250476418
		EQUAL
		IFJMPREF {
			CALL $preStart$
		}
		DUP
		PUSHINT 258836457
		EQUAL
		IFJMPREF {
			CALL $setIcon$
		}
	}
	DUP
	PUSHINT 461249023
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 311294702
		EQUAL
		IFJMPREF {
			CALL $showACT4dt$
		}
		DUP
		PUSHINT 392531650
		EQUAL
		IFJMPREF {
			CALL $fetchCurAvtivity$
		}
		DUP
		PUSHINT 461021821
		EQUAL
		IFJMPREF {
			CALL $VoteForValidator$
		}
		DUP
		PUSHINT 461249023
		EQUAL
		IFJMPREF {
			CALL $setValStakeCall$
		}
	}
	DUP
	PUSHINT 670720486
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 523943293
		EQUAL
		IFJMPREF {
			CALL $SCgetDAstruct$
		}
		DUP
		PUSHINT 558780428
		EQUAL
		IFJMPREF {
			CALL $SCfetchCurAvtivity$
		}
		DUP
		PUSHINT 657572208
		EQUAL
		IFJMPREF {
			CALL $onValidate$
		}
		DUP
		PUSHINT 670720486
		EQUAL
		IFJMPREF {
			CALL $deauditsCaller$
		}
	}
	DUP
	PUSHINT 1037851860
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 690534849
		EQUAL
		IFJMPREF {
			CALL $goToValMenubyCurActiv$
		}
		DUP
		PUSHINT 696732678
		EQUAL
		IFJMPREF {
			CALL $SCfetchActivities$
		}
		DUP
		PUSHINT 809570843
		EQUAL
		IFJMPREF {
			CALL $fetchDA$
		}
		DUP
		PUSHINT 1037851860
		EQUAL
		IFJMPREF {
			CALL $onsetDaD$
		}
	}
}
DUP
PUSHINT 1927677156
LEQ
IFJMPREF {
	DUP
	PUSHINT 1184379414
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1073606278
		EQUAL
		IFJMPREF {
			CALL $preSstart$
		}
		DUP
		PUSHINT 1133541433
		EQUAL
		IFJMPREF {
			CALL $setValStake$
		}
		DUP
		PUSHINT 1150753476
		EQUAL
		IFJMPREF {
			CALL $onGetPhotoLink$
		}
		DUP
		PUSHINT 1184379414
		EQUAL
		IFJMPREF {
			CALL $someError$
		}
	}
	DUP
	PUSHINT 1482960138
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1260116821
		EQUAL
		IFJMPREF {
			CALL $mainMenu$
		}
		DUP
		PUSHINT 1355955953
		EQUAL
		IFJMPREF {
			CALL $act4Validmenu$
		}
		DUP
		PUSHINT 1358660711
		EQUAL
		IFJMPREF {
			CALL $DAmenu$
		}
		DUP
		PUSHINT 1482960138
		EQUAL
		IFJMPREF {
			CALL $getRequiredInterfaces$
		}
	}
	DUP
	PUSHINT 1756716863
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1539101388
		EQUAL
		IFJMPREF {
			CALL $showVotingAuditss$
		}
		DUP
		PUSHINT 1551076115
		EQUAL
		IFJMPREF {
			CALL $SCgetDeauditAddresses$
		}
		DUP
		PUSHINT 1568115769
		EQUAL
		IFJMPREF {
			CALL $setABI$
		}
		DUP
		PUSHINT 1756716863
		EQUAL
		IFJMPREF {
			CALL $constructor$
		}
	}
	DUP
	PUSHINT 1927677156
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1846436689
		EQUAL
		IFJMPREF {
			CALL $onGetCollatorPhotoLink$
		}
		DUP
		PUSHINT 1853070333
		EQUAL
		IFJMPREF {
			CALL $VoteAgainstValidator$
		}
		DUP
		PUSHINT 1888717285
		EQUAL
		IFJMPREF {
			CALL $goToCore$
		}
		DUP
		PUSHINT 1927677156
		EQUAL
		IFJMPREF {
			CALL $activitiesD$
		}
	}
}
DUP
PUSHINT 2112671963
LEQ
IFJMPREF {
	DUP
	PUSHINT 2006082788
	EQUAL
	IFJMPREF {
		CALL $onGetAdditionalPhotos$
	}
	DUP
	PUSHINT 2096805320
	EQUAL
	IFJMPREF {
		CALL $fetchActivities$
	}
	DUP
	PUSHINT 2112671963
	EQUAL
	IFJMPREF {
		CALL $getDebotOptions$
	}
}
